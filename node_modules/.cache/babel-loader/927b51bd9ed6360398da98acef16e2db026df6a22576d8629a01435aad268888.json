{"ast":null,"code":"var xtend = require('xtend');\nvar walk = require('acorn-walk');\nvar base = xtend(walk.base);\nbase.Import = function () {};\nfunction simple(node, visitors, baseVisitor, state, override) {\n  return walk.simple(node, visitors, baseVisitor || base, state, override);\n}\nfunction ancestor(node, visitors, baseVisitor, state) {\n  return walk.ancestor(node, visitors, baseVisitor || base, state);\n}\nfunction recursive(node, state, funcs, baseVisitor, override) {\n  return walk.recursive(node, state, funcs, baseVisitor || base, override);\n}\nfunction full(node, callback, baseVisitor, state, override) {\n  return walk.full(node, callback, baseVisitor || base, state, override);\n}\nfunction fullAncestor(node, callback, baseVisitor, state) {\n  return walk.fullAncestor(node, callback, baseVisitor || base, state);\n}\nfunction findNodeAt(node, start, end, test, baseVisitor, state) {\n  return walk.findNodeAt(node, start, end, test, baseVisitor || base, state);\n}\nfunction findNodeAround(node, pos, test, baseVisitor, state) {\n  return walk.findNodeAround(node, pos, test, baseVisitor || base, state);\n}\nfunction findNodeAfter(node, pos, test, baseVisitor, state) {\n  return walk.findNodeAfter(node, pos, test, baseVisitor || base, state);\n}\nfunction findNodeBefore(node, pos, test, baseVisitor, state) {\n  return walk.findNodeBefore(node, pos, test, baseVisitor || base, state);\n}\nfunction make(funcs, baseVisitor) {\n  return walk.make(funcs, baseVisitor || base);\n}\nexports.simple = simple;\nexports.ancestor = ancestor;\nexports.recursive = recursive;\nexports.full = full;\nexports.fullAncestor = fullAncestor;\nexports.findNodeAt = findNodeAt;\nexports.findNodeAround = findNodeAround;\nexports.findNodeAfter = findNodeAfter;\nexports.findNodeBefore = findNodeBefore;\nexports.make = make;\nexports.base = base;","map":{"version":3,"names":["xtend","require","walk","base","Import","simple","node","visitors","baseVisitor","state","override","ancestor","recursive","funcs","full","callback","fullAncestor","findNodeAt","start","end","test","findNodeAround","pos","findNodeAfter","findNodeBefore","make","exports"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/acorn-node/walk.js"],"sourcesContent":["var xtend = require('xtend')\nvar walk = require('acorn-walk')\n\nvar base = xtend(walk.base)\nbase.Import = function () {}\n\nfunction simple (node, visitors, baseVisitor, state, override) {\n  return walk.simple(node, visitors, baseVisitor || base, state, override)\n}\n\nfunction ancestor (node, visitors, baseVisitor, state) {\n  return walk.ancestor(node, visitors, baseVisitor || base, state)\n}\n\nfunction recursive (node, state, funcs, baseVisitor, override) {\n  return walk.recursive(node, state, funcs, baseVisitor || base, override)\n}\n\nfunction full (node, callback, baseVisitor, state, override) {\n  return walk.full(node, callback, baseVisitor || base, state, override)\n}\n\nfunction fullAncestor (node, callback, baseVisitor, state) {\n  return walk.fullAncestor(node, callback, baseVisitor || base, state)\n}\n\nfunction findNodeAt (node, start, end, test, baseVisitor, state) {\n  return walk.findNodeAt(node, start, end, test, baseVisitor || base, state)\n}\n\nfunction findNodeAround (node, pos, test, baseVisitor, state) {\n  return walk.findNodeAround(node, pos, test, baseVisitor || base, state)\n}\n\nfunction findNodeAfter (node, pos, test, baseVisitor, state) {\n  return walk.findNodeAfter(node, pos, test, baseVisitor || base, state)\n}\n\nfunction findNodeBefore (node, pos, test, baseVisitor, state) {\n  return walk.findNodeBefore(node, pos, test, baseVisitor || base, state)\n}\n\nfunction make (funcs, baseVisitor) {\n  return walk.make(funcs, baseVisitor || base)\n}\n\nexports.simple = simple\nexports.ancestor = ancestor\nexports.recursive = recursive\nexports.full = full\nexports.fullAncestor = fullAncestor\nexports.findNodeAt = findNodeAt\nexports.findNodeAround = findNodeAround\nexports.findNodeAfter = findNodeAfter\nexports.findNodeBefore = findNodeBefore\nexports.make = make\nexports.base = base\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}