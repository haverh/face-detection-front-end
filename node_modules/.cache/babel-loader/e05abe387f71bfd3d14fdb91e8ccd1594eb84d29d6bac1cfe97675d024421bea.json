{"ast":null,"code":"var JSONStream = require('JSONStream');\nvar defined = require('defined');\nvar through = require('through2');\nvar umd = require('umd');\nvar Buffer = require('safe-buffer').Buffer;\nvar fs = require('fs');\nvar path = require('path');\nvar combineSourceMap = require('combine-source-map');\nvar defaultPreludePath = path.join(__dirname, '_prelude.js');\nvar defaultPrelude = fs.readFileSync(defaultPreludePath, 'utf8');\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n  return newlines ? newlines.length : 0;\n}\nmodule.exports = function (opts) {\n  if (!opts) opts = {};\n  var parser = opts.raw ? through.obj() : JSONStream.parse([true]);\n  var stream = through.obj(function (buf, enc, next) {\n    parser.write(buf);\n    next();\n  }, function () {\n    parser.end();\n  });\n  parser.pipe(through.obj(write, end));\n  stream.standaloneModule = opts.standaloneModule;\n  stream.hasExports = opts.hasExports;\n  var first = true;\n  var entries = [];\n  var basedir = defined(opts.basedir, process.cwd());\n  var prelude = opts.prelude || defaultPrelude;\n  var preludePath = opts.preludePath || path.relative(basedir, defaultPreludePath).replace(/\\\\/g, '/');\n  var lineno = 1 + newlinesIn(prelude);\n  var sourcemap;\n  return stream;\n  function write(row, enc, next) {\n    if (first && opts.standalone) {\n      var pre = umd.prelude(opts.standalone).trim();\n      stream.push(Buffer.from(pre + 'return ', 'utf8'));\n    } else if (first && stream.hasExports) {\n      var pre = opts.externalRequireName || 'require';\n      stream.push(Buffer.from(pre + '=', 'utf8'));\n    }\n    if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n    if (row.sourceFile && !row.nomap) {\n      if (!sourcemap) {\n        sourcemap = combineSourceMap.create(null, opts.sourceRoot);\n        sourcemap.addFile({\n          sourceFile: preludePath,\n          source: prelude\n        }, {\n          line: 0\n        });\n      }\n      sourcemap.addFile({\n        sourceFile: row.sourceFile,\n        source: row.source\n      }, {\n        line: lineno\n      });\n    }\n    var wrappedSource = [first ? '' : ',', JSON.stringify(row.id), ':[', 'function(require,module,exports){\\n', combineSourceMap.removeComments(row.source), '\\n},', '{' + Object.keys(row.deps || {}).sort().map(function (key) {\n      return JSON.stringify(key) + ':' + JSON.stringify(row.deps[key]);\n    }).join(',') + '}', ']'].join('');\n    stream.push(Buffer.from(wrappedSource, 'utf8'));\n    lineno += newlinesIn(wrappedSource);\n    first = false;\n    if (row.entry && row.order !== undefined) {\n      entries[row.order] = row.id;\n    } else if (row.entry) entries.push(row.id);\n    next();\n  }\n  function end() {\n    if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n    entries = entries.filter(function (x) {\n      return x !== undefined;\n    });\n    stream.push(Buffer.from('},{},' + JSON.stringify(entries) + ')', 'utf8'));\n    if (opts.standalone && !first) {\n      stream.push(Buffer.from('(' + JSON.stringify(stream.standaloneModule) + ')' + umd.postlude(opts.standalone), 'utf8'));\n    }\n    if (sourcemap) {\n      var comment = sourcemap.comment();\n      if (opts.sourceMapPrefix) {\n        comment = comment.replace(/^\\/\\/#/, function () {\n          return opts.sourceMapPrefix;\n        });\n      }\n      stream.push(Buffer.from('\\n' + comment + '\\n', 'utf8'));\n    }\n    if (!sourcemap && !opts.standalone) {\n      stream.push(Buffer.from(';\\n', 'utf8'));\n    }\n    stream.push(null);\n  }\n};","map":{"version":3,"names":["JSONStream","require","defined","through","umd","Buffer","fs","path","combineSourceMap","defaultPreludePath","join","__dirname","defaultPrelude","readFileSync","newlinesIn","src","newlines","match","length","module","exports","opts","parser","raw","obj","parse","stream","buf","enc","next","write","end","pipe","standaloneModule","hasExports","first","entries","basedir","process","cwd","prelude","preludePath","relative","replace","lineno","sourcemap","row","standalone","pre","trim","push","from","externalRequireName","sourceFile","nomap","create","sourceRoot","addFile","source","line","wrappedSource","JSON","stringify","id","removeComments","Object","keys","deps","sort","map","key","entry","order","undefined","filter","x","postlude","comment","sourceMapPrefix"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/browser-pack/index.js"],"sourcesContent":["var JSONStream = require('JSONStream');\nvar defined = require('defined');\nvar through = require('through2');\nvar umd = require('umd');\nvar Buffer = require('safe-buffer').Buffer;\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar combineSourceMap = require('combine-source-map');\n\nvar defaultPreludePath = path.join(__dirname, '_prelude.js');\nvar defaultPrelude = fs.readFileSync(defaultPreludePath, 'utf8');\n\nfunction newlinesIn(src) {\n  if (!src) return 0;\n  var newlines = src.match(/\\n/g);\n\n  return newlines ? newlines.length : 0;\n}\n\nmodule.exports = function (opts) {\n    if (!opts) opts = {};\n    var parser = opts.raw ? through.obj() : JSONStream.parse([ true ]);\n    var stream = through.obj(\n        function (buf, enc, next) { parser.write(buf); next() },\n        function () { parser.end() }\n    );\n    parser.pipe(through.obj(write, end));\n    stream.standaloneModule = opts.standaloneModule;\n    stream.hasExports = opts.hasExports;\n    \n    var first = true;\n    var entries = [];\n    var basedir = defined(opts.basedir, process.cwd());\n    var prelude = opts.prelude || defaultPrelude;\n    var preludePath = opts.preludePath ||\n        path.relative(basedir, defaultPreludePath).replace(/\\\\/g, '/');\n    \n    var lineno = 1 + newlinesIn(prelude);\n    var sourcemap;\n    \n    return stream;\n    \n    function write (row, enc, next) {\n        if (first && opts.standalone) {\n            var pre = umd.prelude(opts.standalone).trim();\n            stream.push(Buffer.from(pre + 'return ', 'utf8'));\n        }\n        else if (first && stream.hasExports) {\n            var pre = opts.externalRequireName || 'require';\n            stream.push(Buffer.from(pre + '=', 'utf8'));\n        }\n        if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n        \n        if (row.sourceFile && !row.nomap) {\n            if (!sourcemap) {\n                sourcemap = combineSourceMap.create(null, opts.sourceRoot);\n                sourcemap.addFile(\n                    { sourceFile: preludePath, source: prelude },\n                    { line: 0 }\n                );\n            }\n            sourcemap.addFile(\n                { sourceFile: row.sourceFile, source: row.source },\n                { line: lineno }\n            );\n        }\n        \n        var wrappedSource = [\n            (first ? '' : ','),\n            JSON.stringify(row.id),\n            ':[',\n            'function(require,module,exports){\\n',\n            combineSourceMap.removeComments(row.source),\n            '\\n},',\n            '{' + Object.keys(row.deps || {}).sort().map(function (key) {\n                return JSON.stringify(key) + ':'\n                    + JSON.stringify(row.deps[key])\n                ;\n            }).join(',') + '}',\n            ']'\n        ].join('');\n\n        stream.push(Buffer.from(wrappedSource, 'utf8'));\n        lineno += newlinesIn(wrappedSource);\n        \n        first = false;\n        if (row.entry && row.order !== undefined) {\n            entries[row.order] = row.id;\n        }\n        else if (row.entry) entries.push(row.id);\n        next();\n    }\n    \n    function end () {\n        if (first) stream.push(Buffer.from(prelude + '({', 'utf8'));\n        entries = entries.filter(function (x) { return x !== undefined });\n        \n        stream.push(\n            Buffer.from('},{},' + JSON.stringify(entries) + ')', 'utf8')\n        );\n\n        if (opts.standalone && !first) {\n            stream.push(Buffer.from(\n                '(' + JSON.stringify(stream.standaloneModule) + ')'\n                    + umd.postlude(opts.standalone),\n                'utf8'\n            ));\n        }\n        \n        if (sourcemap) {\n            var comment = sourcemap.comment();\n            if (opts.sourceMapPrefix) {\n                comment = comment.replace(\n                    /^\\/\\/#/, function () { return opts.sourceMapPrefix }\n                )\n            }\n            stream.push(Buffer.from('\\n' + comment + '\\n', 'utf8'));\n        }\n        if (!sourcemap && !opts.standalone) {\n            stream.push(Buffer.from(';\\n', 'utf8'));\n        }\n\n        stream.push(null);\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}