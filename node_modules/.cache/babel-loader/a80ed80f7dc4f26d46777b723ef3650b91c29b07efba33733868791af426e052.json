{"ast":null,"code":"/*global Buffer*/\n// Named constants with unique integer values\nvar C = {};\n// Tokens\nvar LEFT_BRACE = C.LEFT_BRACE = 0x1;\nvar RIGHT_BRACE = C.RIGHT_BRACE = 0x2;\nvar LEFT_BRACKET = C.LEFT_BRACKET = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON = C.COLON = 0x5;\nvar COMMA = C.COMMA = 0x6;\nvar TRUE = C.TRUE = 0x7;\nvar FALSE = C.FALSE = 0x8;\nvar NULL = C.NULL = 0x9;\nvar STRING = C.STRING = 0xa;\nvar NUMBER = C.NUMBER = 0xb;\n// Tokenizer States\nvar START = C.START = 0x11;\nvar STOP = C.STOP = 0x12;\nvar TRUE1 = C.TRUE1 = 0x21;\nvar TRUE2 = C.TRUE2 = 0x22;\nvar TRUE3 = C.TRUE3 = 0x23;\nvar FALSE1 = C.FALSE1 = 0x31;\nvar FALSE2 = C.FALSE2 = 0x32;\nvar FALSE3 = C.FALSE3 = 0x33;\nvar FALSE4 = C.FALSE4 = 0x34;\nvar NULL1 = C.NULL1 = 0x41;\nvar NULL2 = C.NULL2 = 0x42;\nvar NULL3 = C.NULL3 = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66;\n// Parser States\nvar VALUE = C.VALUE = 0x71;\nvar KEY = C.KEY = 0x72;\n// Parser Modes\nvar OBJECT = C.OBJECT = 0x81;\nvar ARRAY = C.ARRAY = 0x82;\n// Character constants\nvar BACK_SLASH = \"\\\\\".charCodeAt(0);\nvar FORWARD_SLASH = \"\\/\".charCodeAt(0);\nvar BACKSPACE = \"\\b\".charCodeAt(0);\nvar FORM_FEED = \"\\f\".charCodeAt(0);\nvar NEWLINE = \"\\n\".charCodeAt(0);\nvar CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nvar TAB = \"\\t\".charCodeAt(0);\nvar STRING_BUFFER_SIZE = 64 * 1024;\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n  this.string = undefined; // string data\n  this.stringBuffer = Buffer.alloc ? Buffer.alloc(STRING_BUFFER_SIZE) : new Buffer(STRING_BUFFER_SIZE);\n  this.stringBufferOffset = 0;\n  this.unicode = undefined; // unicode escapes\n  this.highSurrogate = undefined;\n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n  this.temp_buffs = {\n    \"2\": new Buffer(2),\n    \"3\": new Buffer(3),\n    \"4\": new Buffer(4)\n  }; // for rebuilding chars split before boundary is reached\n\n  // Stream offset\n  this.offset = -1;\n}\n\n// Slow code to string converter (only used when throwing syntax errors)\nParser.toknam = function (code) {\n  var keys = Object.keys(C);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (C[key] === code) {\n      return key;\n    }\n  }\n  return code && \"0x\" + code.toString(16);\n};\nvar proto = Parser.prototype;\nproto.onError = function (err) {\n  throw err;\n};\nproto.charError = function (buffer, i) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n};\nproto.appendStringChar = function (char) {\n  if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8');\n    this.stringBufferOffset = 0;\n  }\n  this.stringBuffer[this.stringBufferOffset++] = char;\n};\nproto.appendStringBuf = function (buf, start, end) {\n  var size = buf.length;\n  if (typeof start === 'number') {\n    if (typeof end === 'number') {\n      if (end < 0) {\n        // adding a negative end decreeses the size\n        size = buf.length - start + end;\n      } else {\n        size = end - start;\n      }\n    } else {\n      size = buf.length - start;\n    }\n  }\n  if (size < 0) {\n    size = 0;\n  }\n  if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n    this.stringBufferOffset = 0;\n  }\n  buf.copy(this.stringBuffer, this.stringBufferOffset, start, end);\n  this.stringBufferOffset += size;\n};\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  var n;\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START) {\n      n = buffer[i];\n      this.offset++;\n      if (n === 0x7b) {\n        this.onToken(LEFT_BRACE, \"{\"); // {\n      } else if (n === 0x7d) {\n        this.onToken(RIGHT_BRACE, \"}\"); // }\n      } else if (n === 0x5b) {\n        this.onToken(LEFT_BRACKET, \"[\"); // [\n      } else if (n === 0x5d) {\n        this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      } else if (n === 0x3a) {\n        this.onToken(COLON, \":\"); // :\n      } else if (n === 0x2c) {\n        this.onToken(COMMA, \",\"); // ,\n      } else if (n === 0x74) {\n        this.tState = TRUE1; // t\n      } else if (n === 0x66) {\n        this.tState = FALSE1; // f\n      } else if (n === 0x6e) {\n        this.tState = NULL1; // n\n      } else if (n === 0x22) {\n        // \"\n        this.string = \"\";\n        this.stringBufferOffset = 0;\n        this.tState = STRING1;\n      } else if (n === 0x2d) {\n        this.string = \"-\";\n        this.tState = NUMBER1; // -\n      } else {\n        if (n >= 0x30 && n < 0x40) {\n          // 1-9\n          this.string = String.fromCharCode(n);\n          this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {\n          // whitespace\n        } else {\n          return this.charError(buffer, i);\n        }\n      }\n    } else if (this.tState === STRING1) {\n      // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n        this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence]);\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) {\n        // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if (n <= 193 || n > 244) {\n          return this.onError(new Error(\"Invalid UTF-8 character at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n        }\n        if (n >= 194 && n <= 223) this.bytes_in_sequence = 2;\n        if (n >= 224 && n <= 239) this.bytes_in_sequence = 3;\n        if (n >= 240 && n <= 244) this.bytes_in_sequence = 4;\n        if (this.bytes_in_sequence + i > buffer.length) {\n          // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= buffer.length - 1 - i; k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n\n          this.bytes_remaining = i + this.bytes_in_sequence - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.appendStringBuf(buffer, i, i + this.bytes_in_sequence);\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) {\n        this.tState = START;\n        this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n        this.stringBufferOffset = 0;\n        this.onToken(STRING, this.string);\n        this.offset += Buffer.byteLength(this.string, 'utf8') + 1;\n        this.string = undefined;\n      } else if (n === 0x5c) {\n        this.tState = STRING2;\n      } else if (n >= 0x20) {\n        this.appendStringChar(n);\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === STRING2) {\n      // After backslash\n      n = buffer[i];\n      if (n === 0x22) {\n        this.appendStringChar(n);\n        this.tState = STRING1;\n      } else if (n === 0x5c) {\n        this.appendStringChar(BACK_SLASH);\n        this.tState = STRING1;\n      } else if (n === 0x2f) {\n        this.appendStringChar(FORWARD_SLASH);\n        this.tState = STRING1;\n      } else if (n === 0x62) {\n        this.appendStringChar(BACKSPACE);\n        this.tState = STRING1;\n      } else if (n === 0x66) {\n        this.appendStringChar(FORM_FEED);\n        this.tState = STRING1;\n      } else if (n === 0x6e) {\n        this.appendStringChar(NEWLINE);\n        this.tState = STRING1;\n      } else if (n === 0x72) {\n        this.appendStringChar(CARRIAGE_RETURN);\n        this.tState = STRING1;\n      } else if (n === 0x74) {\n        this.appendStringChar(TAB);\n        this.tState = STRING1;\n      } else if (n === 0x75) {\n        this.unicode = \"\";\n        this.tState = STRING3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6) {\n      // unicode hex codes\n      n = buffer[i];\n      // 0-9 A-F a-f\n      if (n >= 0x30 && n < 0x40 || n > 0x40 && n <= 0x46 || n > 0x60 && n <= 0x66) {\n        this.unicode += String.fromCharCode(n);\n        if (this.tState++ === STRING6) {\n          var intVal = parseInt(this.unicode, 16);\n          this.unicode = undefined;\n          if (this.highSurrogate !== undefined && intVal >= 0xDC00 && intVal < 0xDFFF + 1) {\n            //<56320,57343> - lowSurrogate\n            this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate, intVal)));\n            this.highSurrogate = undefined;\n          } else if (this.highSurrogate === undefined && intVal >= 0xD800 && intVal < 0xDBFF + 1) {\n            //<55296,56319> - highSurrogate\n            this.highSurrogate = intVal;\n          } else {\n            if (this.highSurrogate !== undefined) {\n              this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate)));\n              this.highSurrogate = undefined;\n            }\n            this.appendStringBuf(new Buffer(String.fromCharCode(intVal)));\n          }\n          this.tState = STRING1;\n        }\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {\n      n = buffer[i];\n      switch (n) {\n        case 0x30: // 0\n        case 0x31: // 1\n        case 0x32: // 2\n        case 0x33: // 3\n        case 0x34: // 4\n        case 0x35: // 5\n        case 0x36: // 6\n        case 0x37: // 7\n        case 0x38: // 8\n        case 0x39: // 9\n        case 0x2e: // .\n        case 0x65: // e\n        case 0x45: // E\n        case 0x2b: // +\n        case 0x2d:\n          // -\n          this.string += String.fromCharCode(n);\n          this.tState = NUMBER3;\n          break;\n        default:\n          this.tState = START;\n          var result = Number(this.string);\n          if (isNaN(result)) {\n            return this.charError(buffer, i);\n          }\n          if (this.string.match(/[0-9]+/) == this.string && result.toString() != this.string) {\n            // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number\n            this.onToken(STRING, this.string);\n          } else {\n            this.onToken(NUMBER, result);\n          }\n          this.offset += this.string.length - 1;\n          this.string = undefined;\n          i--;\n          break;\n      }\n    } else if (this.tState === TRUE1) {\n      // r\n      if (buffer[i] === 0x72) {\n        this.tState = TRUE2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === TRUE2) {\n      // u\n      if (buffer[i] === 0x75) {\n        this.tState = TRUE3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === TRUE3) {\n      // e\n      if (buffer[i] === 0x65) {\n        this.tState = START;\n        this.onToken(TRUE, true);\n        this.offset += 3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE1) {\n      // a\n      if (buffer[i] === 0x61) {\n        this.tState = FALSE2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE2) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = FALSE3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE3) {\n      // s\n      if (buffer[i] === 0x73) {\n        this.tState = FALSE4;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === FALSE4) {\n      // e\n      if (buffer[i] === 0x65) {\n        this.tState = START;\n        this.onToken(FALSE, false);\n        this.offset += 4;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL1) {\n      // u\n      if (buffer[i] === 0x75) {\n        this.tState = NULL2;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL2) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = NULL3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NULL3) {\n      // l\n      if (buffer[i] === 0x6c) {\n        this.tState = START;\n        this.onToken(NULL, null);\n        this.offset += 3;\n      } else {\n        return this.charError(buffer, i);\n      }\n    }\n  }\n};\nproto.onToken = function (token, value) {\n  // Override this to get events\n};\nproto.parseError = function (token, value) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + Parser.toknam(token) + (value ? \"(\" + JSON.stringify(value) + \")\" : \"\") + \" in state \" + Parser.toknam(this.state)));\n};\nproto.push = function () {\n  this.stack.push({\n    value: this.value,\n    key: this.key,\n    mode: this.mode\n  });\n};\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n  if (!this.mode) {\n    this.state = VALUE;\n  }\n};\nproto.emit = function (value) {\n  if (this.mode) {\n    this.state = COMMA;\n  }\n  this.onValue(value);\n};\nproto.onValue = function (value) {\n  // Override me\n};\nproto.onToken = function (token, value) {\n  if (this.state === VALUE) {\n    if (token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL) {\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n      this.emit(value);\n    } else if (token === LEFT_BRACE) {\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    } else if (token === LEFT_BRACKET) {\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    } else if (token === RIGHT_BRACE) {\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    } else if (token === RIGHT_BRACKET) {\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === KEY) {\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === COLON) {\n    if (token === COLON) {\n      this.state = VALUE;\n    } else {\n      return this.parseError(token, value);\n    }\n  } else if (this.state === COMMA) {\n    if (token === COMMA) {\n      if (this.mode === ARRAY) {\n        this.key++;\n        this.state = VALUE;\n      } else if (this.mode === OBJECT) {\n        this.state = KEY;\n      }\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  } else {\n    return this.parseError(token, value);\n  }\n};\nParser.C = C;\nmodule.exports = Parser;","map":{"version":3,"names":["C","LEFT_BRACE","RIGHT_BRACE","LEFT_BRACKET","RIGHT_BRACKET","COLON","COMMA","TRUE","FALSE","NULL","STRING","NUMBER","START","STOP","TRUE1","TRUE2","TRUE3","FALSE1","FALSE2","FALSE3","FALSE4","NULL1","NULL2","NULL3","NUMBER1","NUMBER3","STRING1","STRING2","STRING3","STRING4","STRING5","STRING6","VALUE","KEY","OBJECT","ARRAY","BACK_SLASH","charCodeAt","FORWARD_SLASH","BACKSPACE","FORM_FEED","NEWLINE","CARRIAGE_RETURN","TAB","STRING_BUFFER_SIZE","Parser","tState","value","undefined","string","stringBuffer","Buffer","alloc","stringBufferOffset","unicode","highSurrogate","key","mode","stack","state","bytes_remaining","bytes_in_sequence","temp_buffs","offset","toknam","code","keys","Object","i","l","length","toString","proto","prototype","onError","err","charError","buffer","Error","JSON","stringify","String","fromCharCode","appendStringChar","char","appendStringBuf","buf","start","end","size","copy","write","n","onToken","j","k","byteLength","intVal","parseInt","result","Number","isNaN","match","token","parseError","push","pop","parent","emit","onValue","module","exports"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/jsonparse/jsonparse.js"],"sourcesContent":["/*global Buffer*/\n// Named constants with unique integer values\nvar C = {};\n// Tokens\nvar LEFT_BRACE    = C.LEFT_BRACE    = 0x1;\nvar RIGHT_BRACE   = C.RIGHT_BRACE   = 0x2;\nvar LEFT_BRACKET  = C.LEFT_BRACKET  = 0x3;\nvar RIGHT_BRACKET = C.RIGHT_BRACKET = 0x4;\nvar COLON         = C.COLON         = 0x5;\nvar COMMA         = C.COMMA         = 0x6;\nvar TRUE          = C.TRUE          = 0x7;\nvar FALSE         = C.FALSE         = 0x8;\nvar NULL          = C.NULL          = 0x9;\nvar STRING        = C.STRING        = 0xa;\nvar NUMBER        = C.NUMBER        = 0xb;\n// Tokenizer States\nvar START   = C.START   = 0x11;\nvar STOP    = C.STOP    = 0x12;\nvar TRUE1   = C.TRUE1   = 0x21;\nvar TRUE2   = C.TRUE2   = 0x22;\nvar TRUE3   = C.TRUE3   = 0x23;\nvar FALSE1  = C.FALSE1  = 0x31;\nvar FALSE2  = C.FALSE2  = 0x32;\nvar FALSE3  = C.FALSE3  = 0x33;\nvar FALSE4  = C.FALSE4  = 0x34;\nvar NULL1   = C.NULL1   = 0x41;\nvar NULL2   = C.NULL2   = 0x42;\nvar NULL3   = C.NULL3   = 0x43;\nvar NUMBER1 = C.NUMBER1 = 0x51;\nvar NUMBER3 = C.NUMBER3 = 0x53;\nvar STRING1 = C.STRING1 = 0x61;\nvar STRING2 = C.STRING2 = 0x62;\nvar STRING3 = C.STRING3 = 0x63;\nvar STRING4 = C.STRING4 = 0x64;\nvar STRING5 = C.STRING5 = 0x65;\nvar STRING6 = C.STRING6 = 0x66;\n// Parser States\nvar VALUE   = C.VALUE   = 0x71;\nvar KEY     = C.KEY     = 0x72;\n// Parser Modes\nvar OBJECT  = C.OBJECT  = 0x81;\nvar ARRAY   = C.ARRAY   = 0x82;\n// Character constants\nvar BACK_SLASH =      \"\\\\\".charCodeAt(0);\nvar FORWARD_SLASH =   \"\\/\".charCodeAt(0);\nvar BACKSPACE =       \"\\b\".charCodeAt(0);\nvar FORM_FEED =       \"\\f\".charCodeAt(0);\nvar NEWLINE =         \"\\n\".charCodeAt(0);\nvar CARRIAGE_RETURN = \"\\r\".charCodeAt(0);\nvar TAB =             \"\\t\".charCodeAt(0);\n\nvar STRING_BUFFER_SIZE = 64 * 1024;\n\nfunction Parser() {\n  this.tState = START;\n  this.value = undefined;\n\n  this.string = undefined; // string data\n  this.stringBuffer = Buffer.alloc ? Buffer.alloc(STRING_BUFFER_SIZE) : new Buffer(STRING_BUFFER_SIZE);\n  this.stringBufferOffset = 0;\n  this.unicode = undefined; // unicode escapes\n  this.highSurrogate = undefined;\n\n  this.key = undefined;\n  this.mode = undefined;\n  this.stack = [];\n  this.state = VALUE;\n  this.bytes_remaining = 0; // number of bytes remaining in multi byte utf8 char to read after split boundary\n  this.bytes_in_sequence = 0; // bytes in multi byte utf8 char to read\n  this.temp_buffs = { \"2\": new Buffer(2), \"3\": new Buffer(3), \"4\": new Buffer(4) }; // for rebuilding chars split before boundary is reached\n\n  // Stream offset\n  this.offset = -1;\n}\n\n// Slow code to string converter (only used when throwing syntax errors)\nParser.toknam = function (code) {\n  var keys = Object.keys(C);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    if (C[key] === code) { return key; }\n  }\n  return code && (\"0x\" + code.toString(16));\n};\n\nvar proto = Parser.prototype;\nproto.onError = function (err) { throw err; };\nproto.charError = function (buffer, i) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + JSON.stringify(String.fromCharCode(buffer[i])) + \" at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n};\nproto.appendStringChar = function (char) {\n  if (this.stringBufferOffset >= STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8');\n    this.stringBufferOffset = 0;\n  }\n\n  this.stringBuffer[this.stringBufferOffset++] = char;\n};\nproto.appendStringBuf = function (buf, start, end) {\n  var size = buf.length;\n  if (typeof start === 'number') {\n    if (typeof end === 'number') {\n      if (end < 0) {\n        // adding a negative end decreeses the size\n        size = buf.length - start + end;\n      } else {\n        size = end - start;\n      }\n    } else {\n      size = buf.length - start;\n    }\n  }\n\n  if (size < 0) {\n    size = 0;\n  }\n\n  if (this.stringBufferOffset + size > STRING_BUFFER_SIZE) {\n    this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n    this.stringBufferOffset = 0;\n  }\n\n  buf.copy(this.stringBuffer, this.stringBufferOffset, start, end);\n  this.stringBufferOffset += size;\n};\nproto.write = function (buffer) {\n  if (typeof buffer === \"string\") buffer = new Buffer(buffer);\n  var n;\n  for (var i = 0, l = buffer.length; i < l; i++) {\n    if (this.tState === START){\n      n = buffer[i];\n      this.offset++;\n      if(n === 0x7b){ this.onToken(LEFT_BRACE, \"{\"); // {\n      }else if(n === 0x7d){ this.onToken(RIGHT_BRACE, \"}\"); // }\n      }else if(n === 0x5b){ this.onToken(LEFT_BRACKET, \"[\"); // [\n      }else if(n === 0x5d){ this.onToken(RIGHT_BRACKET, \"]\"); // ]\n      }else if(n === 0x3a){ this.onToken(COLON, \":\");  // :\n      }else if(n === 0x2c){ this.onToken(COMMA, \",\"); // ,\n      }else if(n === 0x74){ this.tState = TRUE1;  // t\n      }else if(n === 0x66){ this.tState = FALSE1;  // f\n      }else if(n === 0x6e){ this.tState = NULL1; // n\n      }else if(n === 0x22){ // \"\n        this.string = \"\";\n        this.stringBufferOffset = 0;\n        this.tState = STRING1;\n      }else if(n === 0x2d){ this.string = \"-\"; this.tState = NUMBER1; // -\n      }else{\n        if (n >= 0x30 && n < 0x40) { // 1-9\n          this.string = String.fromCharCode(n); this.tState = NUMBER3;\n        } else if (n === 0x20 || n === 0x09 || n === 0x0a || n === 0x0d) {\n          // whitespace\n        } else {\n          return this.charError(buffer, i);\n        }\n      }\n    }else if (this.tState === STRING1){ // After open quote\n      n = buffer[i]; // get current byte from buffer\n      // check for carry over of a multi byte char split between data chunks\n      // & fill temp buffer it with start of this data chunk up to the boundary limit set in the last iteration\n      if (this.bytes_remaining > 0) {\n        for (var j = 0; j < this.bytes_remaining; j++) {\n          this.temp_buffs[this.bytes_in_sequence][this.bytes_in_sequence - this.bytes_remaining + j] = buffer[j];\n        }\n\n        this.appendStringBuf(this.temp_buffs[this.bytes_in_sequence]);\n        this.bytes_in_sequence = this.bytes_remaining = 0;\n        i = i + j - 1;\n      } else if (this.bytes_remaining === 0 && n >= 128) { // else if no remainder bytes carried over, parse multi byte (>=128) chars one at a time\n        if (n <= 193 || n > 244) {\n          return this.onError(new Error(\"Invalid UTF-8 character at position \" + i + \" in state \" + Parser.toknam(this.tState)));\n        }\n        if ((n >= 194) && (n <= 223)) this.bytes_in_sequence = 2;\n        if ((n >= 224) && (n <= 239)) this.bytes_in_sequence = 3;\n        if ((n >= 240) && (n <= 244)) this.bytes_in_sequence = 4;\n        if ((this.bytes_in_sequence + i) > buffer.length) { // if bytes needed to complete char fall outside buffer length, we have a boundary split\n          for (var k = 0; k <= (buffer.length - 1 - i); k++) {\n            this.temp_buffs[this.bytes_in_sequence][k] = buffer[i + k]; // fill temp buffer of correct size with bytes available in this chunk\n          }\n          this.bytes_remaining = (i + this.bytes_in_sequence) - buffer.length;\n          i = buffer.length - 1;\n        } else {\n          this.appendStringBuf(buffer, i, i + this.bytes_in_sequence);\n          i = i + this.bytes_in_sequence - 1;\n        }\n      } else if (n === 0x22) {\n        this.tState = START;\n        this.string += this.stringBuffer.toString('utf8', 0, this.stringBufferOffset);\n        this.stringBufferOffset = 0;\n        this.onToken(STRING, this.string);\n        this.offset += Buffer.byteLength(this.string, 'utf8') + 1;\n        this.string = undefined;\n      }\n      else if (n === 0x5c) {\n        this.tState = STRING2;\n      }\n      else if (n >= 0x20) { this.appendStringChar(n); }\n      else {\n          return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING2){ // After backslash\n      n = buffer[i];\n      if(n === 0x22){ this.appendStringChar(n); this.tState = STRING1;\n      }else if(n === 0x5c){ this.appendStringChar(BACK_SLASH); this.tState = STRING1;\n      }else if(n === 0x2f){ this.appendStringChar(FORWARD_SLASH); this.tState = STRING1;\n      }else if(n === 0x62){ this.appendStringChar(BACKSPACE); this.tState = STRING1;\n      }else if(n === 0x66){ this.appendStringChar(FORM_FEED); this.tState = STRING1;\n      }else if(n === 0x6e){ this.appendStringChar(NEWLINE); this.tState = STRING1;\n      }else if(n === 0x72){ this.appendStringChar(CARRIAGE_RETURN); this.tState = STRING1;\n      }else if(n === 0x74){ this.appendStringChar(TAB); this.tState = STRING1;\n      }else if(n === 0x75){ this.unicode = \"\"; this.tState = STRING3;\n      }else{\n        return this.charError(buffer, i);\n      }\n    }else if (this.tState === STRING3 || this.tState === STRING4 || this.tState === STRING5 || this.tState === STRING6){ // unicode hex codes\n      n = buffer[i];\n      // 0-9 A-F a-f\n      if ((n >= 0x30 && n < 0x40) || (n > 0x40 && n <= 0x46) || (n > 0x60 && n <= 0x66)) {\n        this.unicode += String.fromCharCode(n);\n        if (this.tState++ === STRING6) {\n          var intVal = parseInt(this.unicode, 16);\n          this.unicode = undefined;\n          if (this.highSurrogate !== undefined && intVal >= 0xDC00 && intVal < (0xDFFF + 1)) { //<56320,57343> - lowSurrogate\n            this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate, intVal)));\n            this.highSurrogate = undefined;\n          } else if (this.highSurrogate === undefined && intVal >= 0xD800 && intVal < (0xDBFF + 1)) { //<55296,56319> - highSurrogate\n            this.highSurrogate = intVal;\n          } else {\n            if (this.highSurrogate !== undefined) {\n              this.appendStringBuf(new Buffer(String.fromCharCode(this.highSurrogate)));\n              this.highSurrogate = undefined;\n            }\n            this.appendStringBuf(new Buffer(String.fromCharCode(intVal)));\n          }\n          this.tState = STRING1;\n        }\n      } else {\n        return this.charError(buffer, i);\n      }\n    } else if (this.tState === NUMBER1 || this.tState === NUMBER3) {\n        n = buffer[i];\n\n        switch (n) {\n          case 0x30: // 0\n          case 0x31: // 1\n          case 0x32: // 2\n          case 0x33: // 3\n          case 0x34: // 4\n          case 0x35: // 5\n          case 0x36: // 6\n          case 0x37: // 7\n          case 0x38: // 8\n          case 0x39: // 9\n          case 0x2e: // .\n          case 0x65: // e\n          case 0x45: // E\n          case 0x2b: // +\n          case 0x2d: // -\n            this.string += String.fromCharCode(n);\n            this.tState = NUMBER3;\n            break;\n          default:\n            this.tState = START;\n            var result = Number(this.string);\n\n            if (isNaN(result)){\n              return this.charError(buffer, i);\n            }\n\n            if ((this.string.match(/[0-9]+/) == this.string) && (result.toString() != this.string)) {\n              // Long string of digits which is an ID string and not valid and/or safe JavaScript integer Number\n              this.onToken(STRING, this.string);\n            } else {\n              this.onToken(NUMBER, result);\n            }\n\n            this.offset += this.string.length - 1;\n            this.string = undefined;\n            i--;\n            break;\n        }\n    }else if (this.tState === TRUE1){ // r\n      if (buffer[i] === 0x72) { this.tState = TRUE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE2){ // u\n      if (buffer[i] === 0x75) { this.tState = TRUE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === TRUE3){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(TRUE, true); this.offset+= 3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE1){ // a\n      if (buffer[i] === 0x61) { this.tState = FALSE2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE2){ // l\n      if (buffer[i] === 0x6c) { this.tState = FALSE3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE3){ // s\n      if (buffer[i] === 0x73) { this.tState = FALSE4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === FALSE4){ // e\n      if (buffer[i] === 0x65) { this.tState = START; this.onToken(FALSE, false); this.offset+= 4; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL1){ // u\n      if (buffer[i] === 0x75) { this.tState = NULL2; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL2){ // l\n      if (buffer[i] === 0x6c) { this.tState = NULL3; }\n      else { return this.charError(buffer, i); }\n    }else if (this.tState === NULL3){ // l\n      if (buffer[i] === 0x6c) { this.tState = START; this.onToken(NULL, null); this.offset += 3; }\n      else { return this.charError(buffer, i); }\n    }\n  }\n};\nproto.onToken = function (token, value) {\n  // Override this to get events\n};\n\nproto.parseError = function (token, value) {\n  this.tState = STOP;\n  this.onError(new Error(\"Unexpected \" + Parser.toknam(token) + (value ? (\"(\" + JSON.stringify(value) + \")\") : \"\") + \" in state \" + Parser.toknam(this.state)));\n};\nproto.push = function () {\n  this.stack.push({value: this.value, key: this.key, mode: this.mode});\n};\nproto.pop = function () {\n  var value = this.value;\n  var parent = this.stack.pop();\n  this.value = parent.value;\n  this.key = parent.key;\n  this.mode = parent.mode;\n  this.emit(value);\n  if (!this.mode) { this.state = VALUE; }\n};\nproto.emit = function (value) {\n  if (this.mode) { this.state = COMMA; }\n  this.onValue(value);\n};\nproto.onValue = function (value) {\n  // Override me\n};\nproto.onToken = function (token, value) {\n  if(this.state === VALUE){\n    if(token === STRING || token === NUMBER || token === TRUE || token === FALSE || token === NULL){\n      if (this.value) {\n        this.value[this.key] = value;\n      }\n      this.emit(value);\n    }else if(token === LEFT_BRACE){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = {};\n      } else {\n        this.value = {};\n      }\n      this.key = undefined;\n      this.state = KEY;\n      this.mode = OBJECT;\n    }else if(token === LEFT_BRACKET){\n      this.push();\n      if (this.value) {\n        this.value = this.value[this.key] = [];\n      } else {\n        this.value = [];\n      }\n      this.key = 0;\n      this.mode = ARRAY;\n      this.state = VALUE;\n    }else if(token === RIGHT_BRACE){\n      if (this.mode === OBJECT) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else if(token === RIGHT_BRACKET){\n      if (this.mode === ARRAY) {\n        this.pop();\n      } else {\n        return this.parseError(token, value);\n      }\n    }else{\n      return this.parseError(token, value);\n    }\n  }else if(this.state === KEY){\n    if (token === STRING) {\n      this.key = value;\n      this.state = COLON;\n    } else if (token === RIGHT_BRACE) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else if(this.state === COLON){\n    if (token === COLON) { this.state = VALUE; }\n    else { return this.parseError(token, value); }\n  }else if(this.state === COMMA){\n    if (token === COMMA) {\n      if (this.mode === ARRAY) { this.key++; this.state = VALUE; }\n      else if (this.mode === OBJECT) { this.state = KEY; }\n\n    } else if (token === RIGHT_BRACKET && this.mode === ARRAY || token === RIGHT_BRACE && this.mode === OBJECT) {\n      this.pop();\n    } else {\n      return this.parseError(token, value);\n    }\n  }else{\n    return this.parseError(token, value);\n  }\n};\n\nParser.C = C;\n\nmodule.exports = Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}