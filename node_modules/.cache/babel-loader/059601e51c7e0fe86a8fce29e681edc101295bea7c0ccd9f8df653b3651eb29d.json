{"ast":null,"code":"/* Generated by `npm run build`, do not edit! */\n\n\"use strict\";\n\nvar acorn = require(\"acorn\");\nif (false) {\n  throw new Error(\"acorn-private-class-elements requires acorn@^6.1.0, not \" + acorn.version);\n}\nvar tt = acorn.tokTypes;\nvar TokenType = acorn.TokenType;\nmodule.exports = function (Parser) {\n  // Only load this plugin once.\n  if (Parser.prototype.parsePrivateName) {\n    return Parser;\n  }\n\n  // Make sure `Parser` comes from the same acorn as our `tt`,\n  // otherwise the comparisons fail.\n  var cur = Parser;\n  while (cur && cur !== acorn.Parser) {\n    cur = cur.__proto__;\n  }\n  if (cur !== acorn.Parser) {\n    throw new Error(\"acorn-private-class-elements does not support mixing different acorn copies\");\n  }\n  Parser = /*@__PURE__*/function (Parser) {\n    function Parser_() {\n      Parser.apply(this, arguments);\n    }\n    if (Parser) Parser_.__proto__ = Parser;\n    Parser_.prototype = Object.create(Parser && Parser.prototype);\n    Parser_.prototype.constructor = Parser_;\n    Parser_.prototype._branch = function _branch() {\n      this.__branch = this.__branch || new Parser({\n        ecmaVersion: this.options.ecmaVersion\n      }, this.input);\n      this.__branch.end = this.end;\n      this.__branch.pos = this.pos;\n      this.__branch.type = this.type;\n      this.__branch.value = this.value;\n      this.__branch.containsEsc = this.containsEsc;\n      return this.__branch;\n    };\n    Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName(element) {\n      element.computed = false;\n      element.key = this.parsePrivateName();\n      if (element.key.name == \"constructor\") {\n        this.raise(element.key.start, \"Classes may not have a private element named constructor\");\n      }\n      var accept = {\n        get: \"set\",\n        set: \"get\"\n      }[element.kind];\n      var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1];\n      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {\n        this.raise(element.start, \"Duplicate private element\");\n      }\n      privateBoundNames[element.key.name] = element.kind || true;\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name];\n      return element.key;\n    };\n    Parser_.prototype.parsePrivateName = function parsePrivateName() {\n      var node = this.startNode();\n      node.name = this.value;\n      this.next();\n      this.finishNode(node, \"PrivateName\");\n      if (this.options.allowReserved == \"never\") {\n        this.checkUnreserved(node);\n      }\n      return node;\n    };\n\n    // Parse # token\n    Parser_.prototype.getTokenFromCode = function getTokenFromCode(code) {\n      if (code === 35) {\n        ++this.pos;\n        var word = this.readWord1();\n        return this.finishToken(this.privateNameToken, word);\n      }\n      return Parser.prototype.getTokenFromCode.call(this, code);\n    };\n\n    // Manage stacks and check for undeclared private names\n    Parser_.prototype.parseClass = function parseClass(node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || [];\n      var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null);\n      this._privateBoundNamesStack.push(privateBoundNames);\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || [];\n      var unresolvedPrivateNames = Object.create(null);\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames);\n      var _return = Parser.prototype.parseClass.call(this, node, isStatement);\n      this._privateBoundNamesStack.pop();\n      this._unresolvedPrivateNamesStack.pop();\n      if (!this._unresolvedPrivateNamesStack.length) {\n        var names = Object.keys(unresolvedPrivateNames);\n        if (names.length) {\n          names.sort(function (n1, n2) {\n            return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2];\n          });\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\");\n        }\n      } else {\n        Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames);\n      }\n      return _return;\n    };\n\n    // Parse private element access\n    Parser_.prototype.parseSubscript = function parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n      if (!this.eat(tt.dot)) {\n        return Parser.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow);\n      }\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.computed = false;\n      if (this.type == this.privateNameToken) {\n        node.property = this.parsePrivateName();\n        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start;\n        }\n      } else {\n        node.property = this.parseIdent(true);\n      }\n      return this.finishNode(node, \"MemberExpression\");\n    };\n\n    // Prohibit delete of private class elements\n    Parser_.prototype.parseMaybeUnary = function parseMaybeUnary(refDestructuringErrors, sawUnary) {\n      var _return = Parser.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary);\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\");\n        }\n      }\n      return _return;\n    };\n    return Parser_;\n  }(Parser);\n  Parser.prototype.privateNameToken = new TokenType(\"privateName\");\n  return Parser;\n};","map":{"version":3,"names":["acorn","require","Error","version","tt","tokTypes","TokenType","module","exports","Parser","prototype","parsePrivateName","cur","__proto__","Parser_","apply","arguments","Object","create","constructor","_branch","__branch","ecmaVersion","options","input","end","pos","type","value","containsEsc","parsePrivateClassElementName","element","computed","key","name","raise","start","accept","get","set","kind","privateBoundNames","_privateBoundNamesStack","length","hasOwnProperty","call","_unresolvedPrivateNamesStack","node","startNode","next","finishNode","allowReserved","checkUnreserved","getTokenFromCode","code","word","readWord1","finishToken","privateNameToken","parseClass","isStatement","push","unresolvedPrivateNames","_return","pop","names","keys","sort","n1","n2","assign","parseSubscript","base","startPos","startLoc","noCalls","maybeAsyncArrow","eat","dot","startNodeAt","object","property","parseIdent","parseMaybeUnary","refDestructuringErrors","sawUnary","operator","argument"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/acorn-node/lib/private-class-elements/index.js"],"sourcesContent":["/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar acorn = require(\"acorn\")\nif (false) {\n  throw new Error((\"acorn-private-class-elements requires acorn@^6.1.0, not \" + (acorn.version)))\n}\nvar tt = acorn.tokTypes\nvar TokenType = acorn.TokenType\n\nmodule.exports = function(Parser) {\n  // Only load this plugin once.\n  if (Parser.prototype.parsePrivateName) {\n    return Parser\n  }\n\n  // Make sure `Parser` comes from the same acorn as our `tt`,\n  // otherwise the comparisons fail.\n  var cur = Parser\n  while (cur && cur !== acorn.Parser) {\n    cur = cur.__proto__\n  }\n  if (cur !== acorn.Parser) {\n    throw new Error(\"acorn-private-class-elements does not support mixing different acorn copies\")\n  }\n\n  Parser = /*@__PURE__*/(function (Parser) {\n    function Parser_ () {\n      Parser.apply(this, arguments);\n    }\n\n    if ( Parser ) Parser_.__proto__ = Parser;\n    Parser_.prototype = Object.create( Parser && Parser.prototype );\n    Parser_.prototype.constructor = Parser_;\n\n    Parser_.prototype._branch = function _branch () {\n      this.__branch = this.__branch || new Parser({ecmaVersion: this.options.ecmaVersion}, this.input)\n      this.__branch.end = this.end\n      this.__branch.pos = this.pos\n      this.__branch.type = this.type\n      this.__branch.value = this.value\n      this.__branch.containsEsc = this.containsEsc\n      return this.__branch\n    };\n\n    Parser_.prototype.parsePrivateClassElementName = function parsePrivateClassElementName (element) {\n      element.computed = false\n      element.key = this.parsePrivateName()\n      if (element.key.name == \"constructor\") { this.raise(element.key.start, \"Classes may not have a private element named constructor\") }\n      var accept = {get: \"set\", set: \"get\"}[element.kind]\n      var privateBoundNames = this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1]\n      if (Object.prototype.hasOwnProperty.call(privateBoundNames, element.key.name) && privateBoundNames[element.key.name] !== accept) {\n        this.raise(element.start, \"Duplicate private element\")\n      }\n      privateBoundNames[element.key.name] = element.kind || true\n      delete this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][element.key.name]\n      return element.key\n    };\n\n    Parser_.prototype.parsePrivateName = function parsePrivateName () {\n      var node = this.startNode()\n      node.name = this.value\n      this.next()\n      this.finishNode(node, \"PrivateName\")\n      if (this.options.allowReserved == \"never\") { this.checkUnreserved(node) }\n      return node\n    };\n\n    // Parse # token\n    Parser_.prototype.getTokenFromCode = function getTokenFromCode (code) {\n      if (code === 35) {\n        ++this.pos\n        var word = this.readWord1()\n        return this.finishToken(this.privateNameToken, word)\n      }\n      return Parser.prototype.getTokenFromCode.call(this, code)\n    };\n\n    // Manage stacks and check for undeclared private names\n    Parser_.prototype.parseClass = function parseClass (node, isStatement) {\n      this._privateBoundNamesStack = this._privateBoundNamesStack || []\n      var privateBoundNames = Object.create(this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1] || null)\n      this._privateBoundNamesStack.push(privateBoundNames)\n      this._unresolvedPrivateNamesStack = this._unresolvedPrivateNamesStack || []\n      var unresolvedPrivateNames = Object.create(null)\n      this._unresolvedPrivateNamesStack.push(unresolvedPrivateNames)\n      var _return = Parser.prototype.parseClass.call(this, node, isStatement)\n      this._privateBoundNamesStack.pop()\n      this._unresolvedPrivateNamesStack.pop()\n      if (!this._unresolvedPrivateNamesStack.length) {\n        var names = Object.keys(unresolvedPrivateNames)\n        if (names.length) {\n          names.sort(function (n1, n2) { return unresolvedPrivateNames[n1] - unresolvedPrivateNames[n2]; })\n          this.raise(unresolvedPrivateNames[names[0]], \"Usage of undeclared private name\")\n        }\n      } else { Object.assign(this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1], unresolvedPrivateNames) }\n      return _return\n    };\n\n    // Parse private element access\n    Parser_.prototype.parseSubscript = function parseSubscript (base, startPos, startLoc, noCalls, maybeAsyncArrow) {\n      if (!this.eat(tt.dot)) {\n        return Parser.prototype.parseSubscript.call(this, base, startPos, startLoc, noCalls, maybeAsyncArrow)\n      }\n      var node = this.startNodeAt(startPos, startLoc)\n      node.object = base\n      node.computed = false\n      if (this.type == this.privateNameToken) {\n        node.property = this.parsePrivateName()\n        if (!this._privateBoundNamesStack.length || !this._privateBoundNamesStack[this._privateBoundNamesStack.length - 1][node.property.name]) {\n          this._unresolvedPrivateNamesStack[this._unresolvedPrivateNamesStack.length - 1][node.property.name] = node.property.start\n        }\n      } else {\n        node.property = this.parseIdent(true)\n      }\n      return this.finishNode(node, \"MemberExpression\")\n    };\n\n    // Prohibit delete of private class elements\n    Parser_.prototype.parseMaybeUnary = function parseMaybeUnary (refDestructuringErrors, sawUnary) {\n      var _return = Parser.prototype.parseMaybeUnary.call(this, refDestructuringErrors, sawUnary)\n      if (_return.operator == \"delete\") {\n        if (_return.argument.type == \"MemberExpression\" && _return.argument.property.type == \"PrivateName\") {\n          this.raise(_return.start, \"Private elements may not be deleted\")\n        }\n      }\n      return _return\n    };\n\n    return Parser_;\n  }(Parser))\n  Parser.prototype.privateNameToken = new TokenType(\"privateName\")\n  return Parser\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}