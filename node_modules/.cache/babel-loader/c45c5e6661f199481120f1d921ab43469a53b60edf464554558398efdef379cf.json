{"ast":null,"code":"'use strict';\n\nvar templateSTR = \"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}defineNamespace()}})(function(){source()});\\n\";\nfunction template(moduleName, options) {\n  if (typeof options === 'boolean') {\n    options = {\n      commonJS: options\n    };\n  } else if (!options) {\n    options = {};\n  }\n  var str = templateSTR.replace(/defineNamespace\\(\\)/g, compileNamespace(moduleName)).split('source()');\n  str[0] = str[0].trim();\n  //make sure these are undefined so as to not get confused if modules have inner UMD systems\n  str[0] += 'var define,module,exports;';\n  if (options.commonJS) str[0] += 'module={exports:(exports={})};';\n  str[0] += '\\n';\n  if (options.commonJS) str[1] = 'return module.exports;' + str[1];\n  str[1] = '\\n' + str[1];\n  return str;\n}\nexports = module.exports = function (name, src, options) {\n  if (typeof options === 'string' && typeof src === 'object') {\n    var tmp = options;\n    options = src;\n    src = tmp;\n  }\n  return exports.prelude(name, options) + src + exports.postlude(name, options);\n};\nexports.prelude = function (moduleName, options) {\n  return template(moduleName, options)[0];\n};\nexports.postlude = function (moduleName, options) {\n  return template(moduleName, options)[1];\n};\nfunction camelCase(name) {\n  name = name.replace(/\\-([a-z])/g, function (_, char) {\n    return char.toUpperCase();\n  });\n  if (!/^[a-zA-Z_$]$/.test(name[0])) {\n    name = name.substr(1);\n  }\n  var result = name.replace(/[^\\w$]+/g, '');\n  if (!result) {\n    throw new Error('Invalid JavaScript identifier resulted from camel-casing');\n  }\n  return result;\n}\nfunction compileNamespace(name) {\n  var names = name.split('.');\n\n  // No namespaces, yield the best case 'global.NAME = VALUE'\n  if (names.length === 1) {\n    return 'g.' + camelCase(name) + ' = f()';\n\n    // Acceptable case, with reasonable compilation\n  } else if (names.length === 2) {\n    names = names.map(camelCase);\n    return '(g.' + names[0] + ' || (g.' + names[0] + ' = {})).' + names[1] + ' = f()';\n\n    // Worst case, too many namespaces to care about\n  } else {\n    var valueContainer = names.pop();\n    return names.map(compileNamespaceStep).concat(['g.' + camelCase(valueContainer) + ' = f()']).join(';');\n  }\n}\nfunction compileNamespaceStep(name) {\n  name = camelCase(name);\n  return 'g=(g.' + name + '||(g.' + name + ' = {}))';\n}","map":{"version":3,"names":["templateSTR","template","moduleName","options","commonJS","str","replace","compileNamespace","split","trim","exports","module","name","src","tmp","prelude","postlude","camelCase","_","char","toUpperCase","test","substr","result","Error","names","length","map","valueContainer","pop","compileNamespaceStep","concat","join"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/umd/index.js"],"sourcesContent":["'use strict';\n\n\nvar templateSTR = \"(function(f){if(typeof exports===\\\"object\\\"&&typeof module!==\\\"undefined\\\"){module.exports=f()}else if(typeof define===\\\"function\\\"&&define.amd){define([],f)}else{var g;if(typeof window!==\\\"undefined\\\"){g=window}else if(typeof global!==\\\"undefined\\\"){g=global}else if(typeof self!==\\\"undefined\\\"){g=self}else{g=this}defineNamespace()}})(function(){source()});\\n\";\n\nfunction template(moduleName, options) {\n  if (typeof options === 'boolean') {\n    options = {commonJS: options};\n  } else if (!options) {\n    options = {};\n  }\n  var str = templateSTR.replace(/defineNamespace\\(\\)/g, compileNamespace(moduleName))\n    .split('source()')\n  str[0] = str[0].trim();\n  //make sure these are undefined so as to not get confused if modules have inner UMD systems\n  str[0] += 'var define,module,exports;';\n  if (options.commonJS) str[0] += 'module={exports:(exports={})};';\n  str[0] += '\\n';\n  if (options.commonJS) str[1] = 'return module.exports;' + str[1];\n  str[1] = '\\n' + str[1];\n  return str;\n}\n\nexports = module.exports = function (name, src, options) {\n  if (typeof options === 'string' && typeof src === 'object') {\n    var tmp = options;\n    options = src;\n    src = tmp;\n  }\n  return exports.prelude(name, options) + src + exports.postlude(name, options);\n};\n\nexports.prelude = function (moduleName, options) {\n  return template(moduleName, options)[0];\n};\nexports.postlude = function (moduleName, options) {\n  return template(moduleName, options)[1];\n};\n\n\nfunction camelCase(name) {\n  name = name.replace(/\\-([a-z])/g, function (_, char) { return char.toUpperCase(); });\n  if (!/^[a-zA-Z_$]$/.test(name[0])) {\n    name = name.substr(1);\n  }\n  var result = name.replace(/[^\\w$]+/g, '')\n  if (!result) {\n    throw new Error('Invalid JavaScript identifier resulted from camel-casing');\n  }\n  return result\n}\n\n\nfunction compileNamespace(name) {\n  var names = name.split('.')\n\n  // No namespaces, yield the best case 'global.NAME = VALUE'\n  if (names.length === 1) {\n    return 'g.' + camelCase(name) + ' = f()';\n\n  // Acceptable case, with reasonable compilation\n  } else if (names.length === 2) {\n    names = names.map(camelCase);\n    return '(g.' + names[0] + ' || (g.' + names[0] + ' = {})).' + names[1] + ' = f()';\n\n  // Worst case, too many namespaces to care about\n  } else {\n    var valueContainer = names.pop()\n    return names.map(compileNamespaceStep)\n                .concat(['g.' + camelCase(valueContainer) + ' = f()'])\n                .join(';');\n  }\n}\n\nfunction compileNamespaceStep(name) {\n  name = camelCase(name);\n  return 'g=(g.' + name + '||(g.' + name + ' = {}))';\n}\n"],"mappings":"AAAA,YAAY;;AAGZ,IAAIA,WAAW,GAAG,2WAA2W;AAE7X,SAASC,QAAQ,CAACC,UAAU,EAAEC,OAAO,EAAE;EACrC,IAAI,OAAOA,OAAO,KAAK,SAAS,EAAE;IAChCA,OAAO,GAAG;MAACC,QAAQ,EAAED;IAAO,CAAC;EAC/B,CAAC,MAAM,IAAI,CAACA,OAAO,EAAE;IACnBA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,IAAIE,GAAG,GAAGL,WAAW,CAACM,OAAO,CAAC,sBAAsB,EAAEC,gBAAgB,CAACL,UAAU,CAAC,CAAC,CAChFM,KAAK,CAAC,UAAU,CAAC;EACpBH,GAAG,CAAC,CAAC,CAAC,GAAGA,GAAG,CAAC,CAAC,CAAC,CAACI,IAAI,EAAE;EACtB;EACAJ,GAAG,CAAC,CAAC,CAAC,IAAI,4BAA4B;EACtC,IAAIF,OAAO,CAACC,QAAQ,EAAEC,GAAG,CAAC,CAAC,CAAC,IAAI,gCAAgC;EAChEA,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI;EACd,IAAIF,OAAO,CAACC,QAAQ,EAAEC,GAAG,CAAC,CAAC,CAAC,GAAG,wBAAwB,GAAGA,GAAG,CAAC,CAAC,CAAC;EAChEA,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,GAAGA,GAAG,CAAC,CAAC,CAAC;EACtB,OAAOA,GAAG;AACZ;AAEAK,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAG,UAAUE,IAAI,EAAEC,GAAG,EAAEV,OAAO,EAAE;EACvD,IAAI,OAAOA,OAAO,KAAK,QAAQ,IAAI,OAAOU,GAAG,KAAK,QAAQ,EAAE;IAC1D,IAAIC,GAAG,GAAGX,OAAO;IACjBA,OAAO,GAAGU,GAAG;IACbA,GAAG,GAAGC,GAAG;EACX;EACA,OAAOJ,OAAO,CAACK,OAAO,CAACH,IAAI,EAAET,OAAO,CAAC,GAAGU,GAAG,GAAGH,OAAO,CAACM,QAAQ,CAACJ,IAAI,EAAET,OAAO,CAAC;AAC/E,CAAC;AAEDO,OAAO,CAACK,OAAO,GAAG,UAAUb,UAAU,EAAEC,OAAO,EAAE;EAC/C,OAAOF,QAAQ,CAACC,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AACDO,OAAO,CAACM,QAAQ,GAAG,UAAUd,UAAU,EAAEC,OAAO,EAAE;EAChD,OAAOF,QAAQ,CAACC,UAAU,EAAEC,OAAO,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC;AAGD,SAASc,SAAS,CAACL,IAAI,EAAE;EACvBA,IAAI,GAAGA,IAAI,CAACN,OAAO,CAAC,YAAY,EAAE,UAAUY,CAAC,EAAEC,IAAI,EAAE;IAAE,OAAOA,IAAI,CAACC,WAAW,EAAE;EAAE,CAAC,CAAC;EACpF,IAAI,CAAC,cAAc,CAACC,IAAI,CAACT,IAAI,CAAC,CAAC,CAAC,CAAC,EAAE;IACjCA,IAAI,GAAGA,IAAI,CAACU,MAAM,CAAC,CAAC,CAAC;EACvB;EACA,IAAIC,MAAM,GAAGX,IAAI,CAACN,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;EACzC,IAAI,CAACiB,MAAM,EAAE;IACX,MAAM,IAAIC,KAAK,CAAC,0DAA0D,CAAC;EAC7E;EACA,OAAOD,MAAM;AACf;AAGA,SAAShB,gBAAgB,CAACK,IAAI,EAAE;EAC9B,IAAIa,KAAK,GAAGb,IAAI,CAACJ,KAAK,CAAC,GAAG,CAAC;;EAE3B;EACA,IAAIiB,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IACtB,OAAO,IAAI,GAAGT,SAAS,CAACL,IAAI,CAAC,GAAG,QAAQ;;IAE1C;EACA,CAAC,MAAM,IAAIa,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC7BD,KAAK,GAAGA,KAAK,CAACE,GAAG,CAACV,SAAS,CAAC;IAC5B,OAAO,KAAK,GAAGQ,KAAK,CAAC,CAAC,CAAC,GAAG,SAAS,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,UAAU,GAAGA,KAAK,CAAC,CAAC,CAAC,GAAG,QAAQ;;IAEnF;EACA,CAAC,MAAM;IACL,IAAIG,cAAc,GAAGH,KAAK,CAACI,GAAG,EAAE;IAChC,OAAOJ,KAAK,CAACE,GAAG,CAACG,oBAAoB,CAAC,CACzBC,MAAM,CAAC,CAAC,IAAI,GAAGd,SAAS,CAACW,cAAc,CAAC,GAAG,QAAQ,CAAC,CAAC,CACrDI,IAAI,CAAC,GAAG,CAAC;EACxB;AACF;AAEA,SAASF,oBAAoB,CAAClB,IAAI,EAAE;EAClCA,IAAI,GAAGK,SAAS,CAACL,IAAI,CAAC;EACtB,OAAO,OAAO,GAAGA,IAAI,GAAG,OAAO,GAAGA,IAAI,GAAG,SAAS;AACpD"},"metadata":{},"sourceType":"script","externalDependencies":[]}