{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\straw\\\\Desktop\\\\Personal CS Projects\\\\ZTM\\\\Web Developer Course\\\\face-recognition\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\n// import type { Container, Engine } from \"tsparticles-engine\";\nimport Particles from 'react-tsparticles';\nimport { loadFull } from 'tsparticles';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USER_ID = 'haverh';\nconst PAT = 'ba1cf962af4741d28934e6bcc44f2325';\nconst APP_ID = 'face-recognition';\nconst MODEL_ID = 'face-detection';\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\nconst particlesInit = async main => {\n  // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\n  // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n  // starting from v2 you can add only the features you need reducing the bundle size\n  await loadFull(main);\n};\nconst particlesOptions = {\n  fpsLimit: 120,\n  interactivity: {\n    events: {\n      onClick: {\n        enable: true,\n        mode: \"push\"\n      },\n      onHover: {\n        enable: true,\n        mode: \"repulse\"\n      },\n      resize: true\n    },\n    modes: {\n      push: {\n        quantity: 2\n      },\n      repulse: {\n        distance: 100,\n        duration: 0.2\n      }\n    }\n  },\n  particles: {\n    color: {\n      value: \"#ffffff\"\n    },\n    links: {\n      color: \"#ffffff\",\n      distance: 150,\n      enable: true,\n      opacity: 0.5,\n      width: 1\n    },\n    collisions: {\n      enable: true\n    },\n    move: {\n      direction: \"none\",\n      enable: true,\n      outModes: {\n        default: \"bounce\"\n      },\n      random: false,\n      speed: 2,\n      straight: false\n    },\n    number: {\n      density: {\n        enable: true,\n        area: 800\n      },\n      value: 80\n    },\n    opacity: {\n      value: 0.5\n    },\n    shape: {\n      type: [\"polygon\", \"triangle\"]\n    },\n    size: {\n      value: {\n        min: 1,\n        max: 5\n      }\n    }\n  },\n  detectRetina: true\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imgURL: this.state.input\n      });\n      const raw = JSON.stringify({\n        \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n        },\n        \"inputs\": [{\n          \"data\": {\n            \"image\": {\n              \"url\": this.state.input\n            }\n          }\n        }]\n      });\n      const requestOptions = {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n        },\n        body: raw\n      };\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions).then(response => response).then(function (result) {\n        result;\n      }, function (error) {});\n    };\n    this.state = {\n      input: '',\n      imgURL: ''\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        init: particlesInit,\n        options: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageURL: this.state.imgURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Particles","loadFull","FaceRecognition","Navigation","Logo","ImageLinkForm","Rank","USER_ID","PAT","APP_ID","MODEL_ID","MODEL_VERSION_ID","particlesInit","main","particlesOptions","fpsLimit","interactivity","events","onClick","enable","mode","onHover","resize","modes","push","quantity","repulse","distance","duration","particles","color","value","links","opacity","width","collisions","move","direction","outModes","default","random","speed","straight","number","density","area","shape","type","size","min","max","detectRetina","App","constructor","onInputChange","event","setState","input","target","onButtonSubmit","imgURL","state","raw","JSON","stringify","requestOptions","method","headers","body","fetch","then","response","result","error","render"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\r\n// import type { Container, Engine } from \"tsparticles-engine\";\r\nimport Particles from 'react-tsparticles';\r\nimport { loadFull } from 'tsparticles';\r\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\r\nimport Navigation from './components/Navigation/Navigation';\r\nimport Logo from './components/Logo/Logo';\r\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\r\nimport Rank from './components/Rank/Rank';\r\nimport './App.css';\r\n\r\nconst USER_ID = 'haverh';\r\nconst PAT = 'ba1cf962af4741d28934e6bcc44f2325';\r\nconst APP_ID = 'face-recognition';\r\nconst MODEL_ID = 'face-detection';\r\nconst MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';\r\n\r\n\r\nconst particlesInit = async (main) => {\r\n       // you can initialize the tsParticles instance (main) here, adding custom shapes or presets\r\n       // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\r\n       // starting from v2 you can add only the features you need reducing the bundle size\r\n       await loadFull(main);\r\n     };\r\nconst particlesOptions = {\r\n     fpsLimit: 120,\r\n     interactivity: {\r\n       events: {\r\n         onClick: {\r\n           enable: true,\r\n           mode: \"push\",\r\n         },\r\n         onHover: {\r\n           enable: true,\r\n           mode: \"repulse\",\r\n         },\r\n         resize: true,\r\n       },\r\n       modes: {\r\n         push: {\r\n           quantity: 2,\r\n         },\r\n         repulse: {\r\n           distance: 100,\r\n           duration: 0.2,\r\n         },\r\n       },\r\n     },\r\n     particles: {\r\n       color: {\r\n         value: \"#ffffff\",\r\n       },\r\n       links: {\r\n         color: \"#ffffff\",\r\n         distance: 150,\r\n         enable: true,\r\n         opacity: 0.5,\r\n         width: 1,\r\n       },\r\n       collisions: {\r\n         enable: true,\r\n       },\r\n       move: {\r\n         direction: \"none\",\r\n         enable: true,\r\n         outModes: {\r\n           default: \"bounce\",\r\n         },\r\n         random: false,\r\n         speed: 2,\r\n         straight: false,\r\n       },\r\n       number: {\r\n         density: {\r\n           enable: true,\r\n           area: 800,\r\n         },\r\n         value: 80,\r\n       },\r\n       opacity: {\r\n         value: 0.5,\r\n       },\r\n       shape: {\r\n         type: [\"polygon\", \"triangle\"],\r\n       },\r\n       size: {\r\n         value: { min: 1, max: 5 },\r\n       },\r\n     },\r\n     detectRetina: true,};\r\n\r\nclass App extends Component {\r\n   constructor() {\r\n      super();\r\n      this.state = {\r\n         input: '',\r\n         imgURL: ''\r\n      }\r\n   }\r\n\r\n   onInputChange = (event) => {\r\n      this.setState({input: event.target.value});\r\n   }\r\n\r\n   onButtonSubmit = () => {\r\n      this.setState({imgURL: this.state.input});\r\n\r\n      const raw = JSON.stringify({\r\n        \"user_app_id\": {\r\n            \"user_id\": USER_ID,\r\n            \"app_id\": APP_ID\r\n        },\r\n        \"inputs\": [\r\n            {\r\n                \"data\": {\r\n                    \"image\": {\r\n                        \"url\": this.state.input\r\n                    }\r\n                }\r\n            }\r\n      ]\r\n      });\r\n      const requestOptions = {\r\n        method: 'POST',\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Authorization': 'Key ' + PAT\r\n        },\r\n        body: raw\r\n      };\r\n\r\n      fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\r\n      .then( response => response )\r\n      .then(\r\n         function(result) {\r\n            result\r\n         },\r\n         function(error) {\r\n         }\r\n      );\r\n   }\r\n\r\n   render() {\r\n      return (\r\n      <div className=\"App\">\r\n         <Particles className='particles'\r\n            init={particlesInit}\r\n            options = {particlesOptions}\r\n         />\r\n         <Navigation />\r\n         <Logo />\r\n         <Rank />\r\n         <ImageLinkForm\r\n            onInputChange={this.onInputChange}\r\n            onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n         <FaceRecognition \r\n            imageURL={this.state.imgURL}\r\n            />\r\n      </div>\r\n   );\r\n   }\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}