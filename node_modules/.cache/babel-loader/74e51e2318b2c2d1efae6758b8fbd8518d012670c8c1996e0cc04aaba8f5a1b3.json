{"ast":null,"code":"// builtin\nvar fs = require('fs');\nvar path = require('path');\n\n// vendor\nvar resv = require('resolve');\n\n// given a path, create an array of node_module paths for it\n// borrowed from substack/resolve\nfunction nodeModulesPaths(start, cb) {\n  var splitRe = process.platform === 'win32' ? /[\\/\\\\]/ : /\\/+/;\n  var parts = start.split(splitRe);\n  var dirs = [];\n  for (var i = parts.length - 1; i >= 0; i--) {\n    if (parts[i] === 'node_modules') continue;\n    var dir = path.join.apply(path, parts.slice(0, i + 1).concat(['node_modules']));\n    if (!parts[0].match(/([A-Za-z]:)/)) {\n      dir = '/' + dir;\n    }\n    dirs.push(dir);\n  }\n  return dirs;\n}\nfunction find_shims_in_package(pkgJson, cur_path, shims, browser) {\n  try {\n    var info = JSON.parse(pkgJson);\n  } catch (err) {\n    err.message = pkgJson + ' : ' + err.message;\n    throw err;\n  }\n  var replacements = getReplacements(info, browser);\n\n  // no replacements, skip shims\n  if (!replacements) {\n    return;\n  }\n\n  // if browser mapping is a string\n  // then it just replaces the main entry point\n  if (typeof replacements === 'string') {\n    var key = path.resolve(cur_path, info.main || 'index.js');\n    shims[key] = path.resolve(cur_path, replacements);\n    return;\n  }\n\n  // http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\n  Object.keys(replacements).forEach(function (key) {\n    var val;\n    if (replacements[key] === false) {\n      val = path.normalize(__dirname + '/empty.js');\n    } else {\n      val = replacements[key];\n      // if target is a relative path, then resolve\n      // otherwise we assume target is a module\n      if (val[0] === '.') {\n        val = path.resolve(cur_path, val);\n      }\n    }\n    if (key[0] === '/' || key[0] === '.') {\n      // if begins with / ../ or ./ then we must resolve to a full path\n      key = path.resolve(cur_path, key);\n    }\n    shims[key] = val;\n  });\n  ['.js', '.json'].forEach(function (ext) {\n    Object.keys(shims).forEach(function (key) {\n      if (!shims[key + ext]) {\n        shims[key + ext] = shims[key];\n      }\n    });\n  });\n}\n\n// paths is mutated\n// load shims from first package.json file found\nfunction load_shims(paths, browser, cb) {\n  // identify if our file should be replaced per the browser field\n  // original filename|id -> replacement\n  var shims = Object.create(null);\n  (function next() {\n    var cur_path = paths.shift();\n    if (!cur_path) {\n      return cb(null, shims);\n    }\n    var pkg_path = path.join(cur_path, 'package.json');\n    fs.readFile(pkg_path, 'utf8', function (err, data) {\n      if (err) {\n        // ignore paths we can't open\n        // avoids an exists check\n        if (err.code === 'ENOENT') {\n          return next();\n        }\n        return cb(err);\n      }\n      try {\n        find_shims_in_package(data, cur_path, shims, browser);\n        return cb(null, shims);\n      } catch (err) {\n        return cb(err);\n      }\n    });\n  })();\n}\n;\n\n// paths is mutated\n// synchronously load shims from first package.json file found\nfunction load_shims_sync(paths, browser) {\n  // identify if our file should be replaced per the browser field\n  // original filename|id -> replacement\n  var shims = Object.create(null);\n  var cur_path;\n  while (cur_path = paths.shift()) {\n    var pkg_path = path.join(cur_path, 'package.json');\n    try {\n      var data = fs.readFileSync(pkg_path, 'utf8');\n      find_shims_in_package(data, cur_path, shims, browser);\n      return shims;\n    } catch (err) {\n      // ignore paths we can't open\n      // avoids an exists check\n      if (err.code === 'ENOENT') {\n        continue;\n      }\n      throw err;\n    }\n  }\n  return shims;\n}\nfunction build_resolve_opts(opts, base) {\n  var packageFilter = opts.packageFilter;\n  var browser = normalizeBrowserFieldName(opts.browser);\n  opts.basedir = base;\n  opts.packageFilter = function (info, pkgdir) {\n    if (packageFilter) info = packageFilter(info, pkgdir);\n    var replacements = getReplacements(info, browser);\n\n    // no browser field, keep info unchanged\n    if (!replacements) {\n      return info;\n    }\n    info[browser] = replacements;\n\n    // replace main\n    if (typeof replacements === 'string') {\n      info.main = replacements;\n      return info;\n    }\n    var replace_main = replacements[info.main || './index.js'] || replacements['./' + info.main || './index.js'];\n    info.main = replace_main || info.main;\n    return info;\n  };\n  var pathFilter = opts.pathFilter;\n  opts.pathFilter = function (info, resvPath, relativePath) {\n    if (relativePath[0] != '.') {\n      relativePath = './' + relativePath;\n    }\n    var mappedPath;\n    if (pathFilter) {\n      mappedPath = pathFilter.apply(this, arguments);\n    }\n    if (mappedPath) {\n      return mappedPath;\n    }\n    var replacements = info[browser];\n    if (!replacements) {\n      return;\n    }\n    mappedPath = replacements[relativePath];\n    if (!mappedPath && path.extname(relativePath) === '') {\n      mappedPath = replacements[relativePath + '.js'];\n      if (!mappedPath) {\n        mappedPath = replacements[relativePath + '.json'];\n      }\n    }\n    return mappedPath;\n  };\n  return opts;\n}\nfunction resolve(id, opts, cb) {\n  // opts.filename\n  // opts.paths\n  // opts.modules\n  // opts.packageFilter\n\n  opts = opts || {};\n  opts.filename = opts.filename || '';\n  var base = path.dirname(opts.filename);\n  if (opts.basedir) {\n    base = opts.basedir;\n  }\n  var paths = nodeModulesPaths(base);\n  if (opts.paths) {\n    paths.push.apply(paths, opts.paths);\n  }\n  paths = paths.map(function (p) {\n    return path.dirname(p);\n  });\n\n  // we must always load shims because the browser field could shim out a module\n  load_shims(paths, opts.browser, function (err, shims) {\n    if (err) {\n      return cb(err);\n    }\n    var resid = path.resolve(opts.basedir || path.dirname(opts.filename), id);\n    if (shims[id] || shims[resid]) {\n      var xid = shims[id] ? id : resid;\n      // if the shim was is an absolute path, it was fully resolved\n      if (shims[xid][0] === '/') {\n        return resv(shims[xid], build_resolve_opts(opts, base), function (err, full, pkg) {\n          cb(null, full, pkg);\n        });\n      }\n\n      // module -> alt-module shims\n      id = shims[xid];\n    }\n    var modules = opts.modules || Object.create(null);\n    var shim_path = modules[id];\n    if (shim_path) {\n      return cb(null, shim_path);\n    }\n\n    // our browser field resolver\n    // if browser field is an object tho?\n    var full = resv(id, build_resolve_opts(opts, base), function (err, full, pkg) {\n      if (err) {\n        return cb(err);\n      }\n      var resolved = shims ? shims[full] || full : full;\n      cb(null, resolved, pkg);\n    });\n  });\n}\n;\nresolve.sync = function (id, opts) {\n  // opts.filename\n  // opts.paths\n  // opts.modules\n  // opts.packageFilter\n\n  opts = opts || {};\n  opts.filename = opts.filename || '';\n  var base = path.dirname(opts.filename);\n  if (opts.basedir) {\n    base = opts.basedir;\n  }\n  var paths = nodeModulesPaths(base);\n  if (opts.paths) {\n    paths.push.apply(paths, opts.paths);\n  }\n  paths = paths.map(function (p) {\n    return path.dirname(p);\n  });\n\n  // we must always load shims because the browser field could shim out a module\n  var shims = load_shims_sync(paths, opts.browser);\n  var resid = path.resolve(opts.basedir || path.dirname(opts.filename), id);\n  if (shims[id] || shims[resid]) {\n    var xid = shims[id] ? id : resid;\n    // if the shim was is an absolute path, it was fully resolved\n    if (shims[xid][0] === '/') {\n      return resv.sync(shims[xid], build_resolve_opts(opts, base));\n    }\n\n    // module -> alt-module shims\n    id = shims[xid];\n  }\n  var modules = opts.modules || Object.create(null);\n  var shim_path = modules[id];\n  if (shim_path) {\n    return shim_path;\n  }\n\n  // our browser field resolver\n  // if browser field is an object tho?\n  var full = resv.sync(id, build_resolve_opts(opts, base));\n  return shims ? shims[full] || full : full;\n};\nfunction normalizeBrowserFieldName(browser) {\n  return browser || 'browser';\n}\nfunction getReplacements(info, browser) {\n  browser = normalizeBrowserFieldName(browser);\n  var replacements = info[browser] || info.browser;\n\n  // support legacy browserify field for easier migration from legacy\n  // many packages used this field historically\n  if (typeof info.browserify === 'string' && !replacements) {\n    replacements = info.browserify;\n  }\n  return replacements;\n}\nmodule.exports = resolve;","map":{"version":3,"names":["fs","require","path","resv","nodeModulesPaths","start","cb","splitRe","process","platform","parts","split","dirs","i","length","dir","join","apply","slice","concat","match","push","find_shims_in_package","pkgJson","cur_path","shims","browser","info","JSON","parse","err","message","replacements","getReplacements","key","resolve","main","Object","keys","forEach","val","normalize","__dirname","ext","load_shims","paths","create","next","shift","pkg_path","readFile","data","code","load_shims_sync","readFileSync","build_resolve_opts","opts","base","packageFilter","normalizeBrowserFieldName","basedir","pkgdir","replace_main","pathFilter","resvPath","relativePath","mappedPath","arguments","extname","id","filename","dirname","map","p","resid","xid","full","pkg","modules","shim_path","resolved","sync","browserify","module","exports"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/browser-resolve/index.js"],"sourcesContent":["// builtin\nvar fs = require('fs');\nvar path = require('path');\n\n// vendor\nvar resv = require('resolve');\n\n// given a path, create an array of node_module paths for it\n// borrowed from substack/resolve\nfunction nodeModulesPaths (start, cb) {\n    var splitRe = process.platform === 'win32' ? /[\\/\\\\]/ : /\\/+/;\n    var parts = start.split(splitRe);\n\n    var dirs = [];\n    for (var i = parts.length - 1; i >= 0; i--) {\n        if (parts[i] === 'node_modules') continue;\n        var dir = path.join.apply(\n            path, parts.slice(0, i + 1).concat(['node_modules'])\n        );\n        if (!parts[0].match(/([A-Za-z]:)/)) {\n            dir = '/' + dir;\n        }\n        dirs.push(dir);\n    }\n    return dirs;\n}\n\nfunction find_shims_in_package(pkgJson, cur_path, shims, browser) {\n    try {\n        var info = JSON.parse(pkgJson);\n    }\n    catch (err) {\n        err.message = pkgJson + ' : ' + err.message\n        throw err;\n    }\n\n    var replacements = getReplacements(info, browser);\n\n    // no replacements, skip shims\n    if (!replacements) {\n        return;\n    }\n\n    // if browser mapping is a string\n    // then it just replaces the main entry point\n    if (typeof replacements === 'string') {\n        var key = path.resolve(cur_path, info.main || 'index.js');\n        shims[key] = path.resolve(cur_path, replacements);\n        return;\n    }\n\n    // http://nodejs.org/api/modules.html#modules_loading_from_node_modules_folders\n    Object.keys(replacements).forEach(function(key) {\n        var val;\n        if (replacements[key] === false) {\n            val = path.normalize(__dirname + '/empty.js');\n        }\n        else {\n            val = replacements[key];\n            // if target is a relative path, then resolve\n            // otherwise we assume target is a module\n            if (val[0] === '.') {\n                val = path.resolve(cur_path, val);\n            }\n        }\n\n        if (key[0] === '/' || key[0] === '.') {\n            // if begins with / ../ or ./ then we must resolve to a full path\n            key = path.resolve(cur_path, key);\n        }\n        shims[key] = val;\n    });\n\n    [ '.js', '.json' ].forEach(function (ext) {\n        Object.keys(shims).forEach(function (key) {\n            if (!shims[key + ext]) {\n                shims[key + ext] = shims[key];\n            }\n        });\n    });\n}\n\n// paths is mutated\n// load shims from first package.json file found\nfunction load_shims(paths, browser, cb) {\n    // identify if our file should be replaced per the browser field\n    // original filename|id -> replacement\n    var shims = Object.create(null);\n\n    (function next() {\n        var cur_path = paths.shift();\n        if (!cur_path) {\n            return cb(null, shims);\n        }\n\n        var pkg_path = path.join(cur_path, 'package.json');\n\n        fs.readFile(pkg_path, 'utf8', function(err, data) {\n            if (err) {\n                // ignore paths we can't open\n                // avoids an exists check\n                if (err.code === 'ENOENT') {\n                    return next();\n                }\n\n                return cb(err);\n            }\n            try {\n                find_shims_in_package(data, cur_path, shims, browser);\n                return cb(null, shims);\n            }\n            catch (err) {\n                return cb(err);\n            }\n        });\n    })();\n};\n\n// paths is mutated\n// synchronously load shims from first package.json file found\nfunction load_shims_sync(paths, browser) {\n    // identify if our file should be replaced per the browser field\n    // original filename|id -> replacement\n    var shims = Object.create(null);\n    var cur_path;\n\n    while (cur_path = paths.shift()) {\n        var pkg_path = path.join(cur_path, 'package.json');\n\n        try {\n            var data = fs.readFileSync(pkg_path, 'utf8');\n            find_shims_in_package(data, cur_path, shims, browser);\n            return shims;\n        }\n        catch (err) {\n            // ignore paths we can't open\n            // avoids an exists check\n            if (err.code === 'ENOENT') {\n                continue;\n            }\n\n            throw err;\n        }\n    }\n    return shims;\n}\n\nfunction build_resolve_opts(opts, base) {\n    var packageFilter = opts.packageFilter;\n    var browser = normalizeBrowserFieldName(opts.browser)\n\n    opts.basedir = base;\n    opts.packageFilter = function (info, pkgdir) {\n        if (packageFilter) info = packageFilter(info, pkgdir);\n\n        var replacements = getReplacements(info, browser);\n\n        // no browser field, keep info unchanged\n        if (!replacements) {\n            return info;\n        }\n\n        info[browser] = replacements;\n\n        // replace main\n        if (typeof replacements === 'string') {\n            info.main = replacements;\n            return info;\n        }\n\n        var replace_main = replacements[info.main || './index.js'] ||\n            replacements['./' + info.main || './index.js'];\n\n        info.main = replace_main || info.main;\n        return info;\n    };\n\n    var pathFilter = opts.pathFilter;\n    opts.pathFilter = function(info, resvPath, relativePath) {\n        if (relativePath[0] != '.') {\n            relativePath = './' + relativePath;\n        }\n        var mappedPath;\n        if (pathFilter) {\n            mappedPath = pathFilter.apply(this, arguments);\n        }\n        if (mappedPath) {\n            return mappedPath;\n        }\n\n        var replacements = info[browser];\n        if (!replacements) {\n            return;\n        }\n\n        mappedPath = replacements[relativePath];\n        if (!mappedPath && path.extname(relativePath) === '') {\n            mappedPath = replacements[relativePath + '.js'];\n            if (!mappedPath) {\n                mappedPath = replacements[relativePath + '.json'];\n            }\n        }\n        return mappedPath;\n    };\n\n    return opts;\n}\n\nfunction resolve(id, opts, cb) {\n\n    // opts.filename\n    // opts.paths\n    // opts.modules\n    // opts.packageFilter\n\n    opts = opts || {};\n    opts.filename = opts.filename || '';\n\n    var base = path.dirname(opts.filename);\n\n    if (opts.basedir) {\n        base = opts.basedir;\n    }\n\n    var paths = nodeModulesPaths(base);\n\n    if (opts.paths) {\n        paths.push.apply(paths, opts.paths);\n    }\n\n    paths = paths.map(function(p) {\n        return path.dirname(p);\n    });\n\n    // we must always load shims because the browser field could shim out a module\n    load_shims(paths, opts.browser, function(err, shims) {\n        if (err) {\n            return cb(err);\n        }\n\n        var resid = path.resolve(opts.basedir || path.dirname(opts.filename), id);\n        if (shims[id] || shims[resid]) {\n            var xid = shims[id] ? id : resid;\n            // if the shim was is an absolute path, it was fully resolved\n            if (shims[xid][0] === '/') {\n                return resv(shims[xid], build_resolve_opts(opts, base), function(err, full, pkg) {\n                    cb(null, full, pkg);\n                });\n            }\n\n            // module -> alt-module shims\n            id = shims[xid];\n        }\n\n        var modules = opts.modules || Object.create(null);\n        var shim_path = modules[id];\n        if (shim_path) {\n            return cb(null, shim_path);\n        }\n\n        // our browser field resolver\n        // if browser field is an object tho?\n        var full = resv(id, build_resolve_opts(opts, base), function(err, full, pkg) {\n            if (err) {\n                return cb(err);\n            }\n\n            var resolved = (shims) ? shims[full] || full : full;\n            cb(null, resolved, pkg);\n        });\n    });\n};\n\nresolve.sync = function (id, opts) {\n\n    // opts.filename\n    // opts.paths\n    // opts.modules\n    // opts.packageFilter\n\n    opts = opts || {};\n    opts.filename = opts.filename || '';\n\n    var base = path.dirname(opts.filename);\n\n    if (opts.basedir) {\n        base = opts.basedir;\n    }\n\n    var paths = nodeModulesPaths(base);\n\n    if (opts.paths) {\n        paths.push.apply(paths, opts.paths);\n    }\n\n    paths = paths.map(function(p) {\n        return path.dirname(p);\n    });\n\n    // we must always load shims because the browser field could shim out a module\n    var shims = load_shims_sync(paths, opts.browser);\n    var resid = path.resolve(opts.basedir || path.dirname(opts.filename), id);\n\n    if (shims[id] || shims[resid]) {\n        var xid = shims[id] ? id : resid;\n        // if the shim was is an absolute path, it was fully resolved\n        if (shims[xid][0] === '/') {\n            return resv.sync(shims[xid], build_resolve_opts(opts, base));\n        }\n\n        // module -> alt-module shims\n        id = shims[xid];\n    }\n\n    var modules = opts.modules || Object.create(null);\n    var shim_path = modules[id];\n    if (shim_path) {\n        return shim_path;\n    }\n\n    // our browser field resolver\n    // if browser field is an object tho?\n    var full = resv.sync(id, build_resolve_opts(opts, base));\n\n    return (shims) ? shims[full] || full : full;\n};\n\nfunction normalizeBrowserFieldName(browser) {\n    return browser || 'browser';\n}\n\nfunction getReplacements(info, browser) {\n    browser = normalizeBrowserFieldName(browser);\n    var replacements = info[browser] || info.browser;\n\n    // support legacy browserify field for easier migration from legacy\n    // many packages used this field historically\n    if (typeof info.browserify === 'string' && !replacements) {\n        replacements = info.browserify;\n    }\n\n    return replacements;\n}\n\nmodule.exports = resolve;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}