{"ast":null,"code":"var acorn = require('acorn-node');\nvar walk = require('acorn-node/walk');\nvar defined = require('defined');\nvar requireRe = /\\brequire\\b/;\nfunction parse(src, opts) {\n  if (!opts) opts = {};\n  var acornOpts = {\n    ranges: defined(opts.ranges, opts.range),\n    locations: defined(opts.locations, opts.loc),\n    allowReserved: defined(opts.allowReserved, true),\n    allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)\n  };\n\n  // Use acorn-node's defaults for the rest.\n  if (opts.ecmaVersion != null) acornOpts.ecmaVersion = opts.ecmaVersion;\n  if (opts.sourceType != null) acornOpts.sourceType = opts.sourceType;\n  if (opts.allowHashBang != null) acornOpts.allowHashBang = opts.allowHashBang;\n  if (opts.allowReturnOutsideFunction != null) acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;\n  return acorn.parse(src, acornOpts);\n}\nvar exports = module.exports = function (src, opts) {\n  return exports.find(src, opts).strings;\n};\nexports.find = function (src, opts) {\n  if (!opts) opts = {};\n  var word = opts.word === undefined ? 'require' : opts.word;\n  if (typeof src !== 'string') src = String(src);\n  var isRequire = opts.isRequire || function (node) {\n    return node.callee.type === 'Identifier' && node.callee.name === word;\n  };\n  var modules = {\n    strings: [],\n    expressions: []\n  };\n  if (opts.nodes) modules.nodes = [];\n  var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n  if (!wordRe.test(src)) return modules;\n  var ast = parse(src, opts.parse);\n  function visit(node, st, c) {\n    var hasRequire = wordRe.test(src.slice(node.start, node.end));\n    if (!hasRequire) return;\n    walk.base[node.type](node, st, c);\n    if (node.type !== 'CallExpression') return;\n    if (isRequire(node)) {\n      if (node.arguments.length) {\n        var arg = node.arguments[0];\n        if (arg.type === 'Literal') {\n          modules.strings.push(arg.value);\n        } else if (arg.type === 'TemplateLiteral' && arg.quasis.length === 1 && arg.expressions.length === 0) {\n          modules.strings.push(arg.quasis[0].value.raw);\n        } else {\n          modules.expressions.push(src.slice(arg.start, arg.end));\n        }\n      }\n      if (opts.nodes) modules.nodes.push(node);\n    }\n  }\n  walk.recursive(ast, null, {\n    Statement: visit,\n    Expression: visit\n  });\n  return modules;\n};","map":{"version":3,"names":["acorn","require","walk","defined","requireRe","parse","src","opts","acornOpts","ranges","range","locations","loc","allowReserved","allowImportExportEverywhere","ecmaVersion","sourceType","allowHashBang","allowReturnOutsideFunction","exports","module","find","strings","word","undefined","String","isRequire","node","callee","type","name","modules","expressions","nodes","wordRe","RegExp","test","ast","visit","st","c","hasRequire","slice","start","end","base","arguments","length","arg","push","value","quasis","raw","recursive","Statement","Expression"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/detective/index.js"],"sourcesContent":["var acorn = require('acorn-node');\nvar walk = require('acorn-node/walk');\nvar defined = require('defined');\n\nvar requireRe = /\\brequire\\b/;\n\nfunction parse (src, opts) {\n    if (!opts) opts = {};\n    var acornOpts = {\n        ranges: defined(opts.ranges, opts.range),\n        locations: defined(opts.locations, opts.loc),\n        allowReserved: defined(opts.allowReserved, true),\n        allowImportExportEverywhere: defined(opts.allowImportExportEverywhere, false)\n    };\n\n    // Use acorn-node's defaults for the rest.\n    if (opts.ecmaVersion != null) acornOpts.ecmaVersion = opts.ecmaVersion;\n    if (opts.sourceType != null) acornOpts.sourceType = opts.sourceType;\n    if (opts.allowHashBang != null) acornOpts.allowHashBang = opts.allowHashBang;\n    if (opts.allowReturnOutsideFunction != null) acornOpts.allowReturnOutsideFunction = opts.allowReturnOutsideFunction;\n\n    return acorn.parse(src, acornOpts);\n}\n\nvar exports = module.exports = function (src, opts) {\n    return exports.find(src, opts).strings;\n};\n\nexports.find = function (src, opts) {\n    if (!opts) opts = {};\n    \n    var word = opts.word === undefined ? 'require' : opts.word;\n    if (typeof src !== 'string') src = String(src);\n    \n    var isRequire = opts.isRequire || function (node) {\n        return node.callee.type === 'Identifier'\n            && node.callee.name === word\n        ;\n    };\n    \n    var modules = { strings : [], expressions : [] };\n    if (opts.nodes) modules.nodes = [];\n    \n    var wordRe = word === 'require' ? requireRe : RegExp('\\\\b' + word + '\\\\b');\n    if (!wordRe.test(src)) return modules;\n    \n    var ast = parse(src, opts.parse);\n    \n    function visit(node, st, c) {\n        var hasRequire = wordRe.test(src.slice(node.start, node.end));\n        if (!hasRequire) return;\n        walk.base[node.type](node, st, c);\n        if (node.type !== 'CallExpression') return;\n        if (isRequire(node)) {\n            if (node.arguments.length) {\n                var arg = node.arguments[0];\n                if (arg.type === 'Literal') {\n                    modules.strings.push(arg.value);\n                }\n                else if (arg.type === 'TemplateLiteral'\n                        && arg.quasis.length === 1\n                        && arg.expressions.length === 0) {\n\n                    modules.strings.push(arg.quasis[0].value.raw);\n                }\n                else {\n                    modules.expressions.push(src.slice(arg.start, arg.end));\n                }\n            }\n            if (opts.nodes) modules.nodes.push(node);\n        }\n    }\n    \n    walk.recursive(ast, null, {\n        Statement: visit,\n        Expression: visit\n    });\n    \n    return modules;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}