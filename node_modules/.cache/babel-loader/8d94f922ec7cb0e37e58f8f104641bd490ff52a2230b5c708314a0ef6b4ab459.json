{"ast":null,"code":"var assert = require('assert');\nmodule.exports = dashAst;\n\n/**\n * Call `cb` on each node in `ast`. If `cb` is an object, `cb.enter` is called before processing a Node's children,\n * and `cb.leave` is called after processing a Node's children.\n */\nfunction dashAst(ast, cb) {\n  assert(ast && typeof ast === 'object' && typeof ast.type === 'string', 'dash-ast: ast must be an AST node');\n  if (typeof cb === 'object') {\n    assert(typeof cb.enter === 'function' || typeof cb.leave === 'function', 'dash-ast: visitor must be an object with enter/leave functions');\n    walk(ast, null, cb.enter || undefined, cb.leave || undefined);\n  } else {\n    assert(cb && typeof cb === 'function', 'dash-ast: callback must be a function');\n    walk(ast, null, cb, undefined);\n  }\n}\n\n/**\n * Call `cb` on each node in `ast`. Each node will have a `.parent` property.\n */\ndashAst.withParent = function dashAstParent(ast, cb) {\n  assert(ast && typeof ast === 'object' && typeof ast.type === 'string', 'dash-ast.withParent: ast must be an AST node');\n  if (typeof cb === 'object') {\n    assert(typeof cb.enter === 'function' || typeof cb.leave === 'function', 'dash-ast.withParent: visitor must be an object with enter/leave functions');\n    var enter = cb.enter;\n    var leave = cb.leave;\n    walk(ast, null, function (node, parent) {\n      node.parent = parent;\n      if (enter !== undefined) return enter(node);\n    }, leave ? function (node) {\n      leave(node);\n    } : undefined);\n  } else {\n    assert(cb && typeof cb === 'function', 'dash-ast.withParent: callback must be a function');\n    walk(ast, null, function (node, parent) {\n      node.parent = parent;\n      return cb(node);\n    }, undefined);\n  }\n};\nfunction walk(node, parent, enter, leave) {\n  var cont = enter !== undefined ? enter(node, parent) : undefined;\n  if (cont === false) return;\n  for (var k in node) {\n    if (has(node, k)) {\n      if (k === 'parent') continue;\n      if (isNode(node[k])) {\n        walk(node[k], node, enter, leave);\n      } else if (Array.isArray(node[k])) {\n        walkArray(node[k], node, enter, leave);\n      }\n    }\n  }\n  if (leave !== undefined) leave(node, parent);\n}\nfunction walkArray(nodes, parent, enter, leave) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (isNode(nodes[i])) walk(nodes[i], parent, enter, leave);\n  }\n}\nfunction isNode(node) {\n  return typeof node === 'object' && node && typeof node.type === 'string';\n}\nfunction has(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}","map":{"version":3,"names":["assert","require","module","exports","dashAst","ast","cb","type","enter","leave","walk","undefined","withParent","dashAstParent","node","parent","cont","k","has","isNode","Array","isArray","walkArray","nodes","i","length","obj","prop","Object","prototype","hasOwnProperty","call"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/dash-ast/index.js"],"sourcesContent":["var assert = require('assert')\n\nmodule.exports = dashAst\n\n/**\n * Call `cb` on each node in `ast`. If `cb` is an object, `cb.enter` is called before processing a Node's children,\n * and `cb.leave` is called after processing a Node's children.\n */\nfunction dashAst (ast, cb) {\n  assert(ast && typeof ast === 'object' && typeof ast.type === 'string',\n    'dash-ast: ast must be an AST node')\n\n  if (typeof cb === 'object') {\n    assert(typeof cb.enter === 'function' || typeof cb.leave === 'function',\n      'dash-ast: visitor must be an object with enter/leave functions')\n\n    walk(ast, null, cb.enter || undefined, cb.leave || undefined)\n  } else {\n    assert(cb && typeof cb === 'function',\n      'dash-ast: callback must be a function')\n\n    walk(ast, null, cb, undefined)\n  }\n}\n\n/**\n * Call `cb` on each node in `ast`. Each node will have a `.parent` property.\n */\ndashAst.withParent = function dashAstParent (ast, cb) {\n  assert(ast && typeof ast === 'object' && typeof ast.type === 'string',\n    'dash-ast.withParent: ast must be an AST node')\n\n  if (typeof cb === 'object') {\n    assert(typeof cb.enter === 'function' || typeof cb.leave === 'function',\n      'dash-ast.withParent: visitor must be an object with enter/leave functions')\n\n    var enter = cb.enter\n    var leave = cb.leave\n    walk(ast, null, function (node, parent) {\n      node.parent = parent\n      if (enter !== undefined) return enter(node)\n    }, leave ? function (node) { leave(node) } : undefined)\n  } else {\n    assert(cb && typeof cb === 'function',\n      'dash-ast.withParent: callback must be a function')\n\n    walk(ast, null, function (node, parent) {\n      node.parent = parent\n      return cb(node)\n    }, undefined)\n  }\n}\n\nfunction walk (node, parent, enter, leave) {\n  var cont = enter !== undefined ? enter(node, parent) : undefined\n  if (cont === false) return\n\n  for (var k in node) {\n    if (has(node, k)) {\n      if (k === 'parent') continue\n      if (isNode(node[k])) {\n        walk(node[k], node, enter, leave)\n      } else if (Array.isArray(node[k])) {\n        walkArray(node[k], node, enter, leave)\n      }\n    }\n  }\n\n  if (leave !== undefined) leave(node, parent)\n}\n\nfunction walkArray (nodes, parent, enter, leave) {\n  for (var i = 0; i < nodes.length; i++) {\n    if (isNode(nodes[i])) walk(nodes[i], parent, enter, leave)\n  }\n}\n\nfunction isNode (node) {\n  return typeof node === 'object' && node && typeof node.type === 'string'\n}\n\nfunction has (obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}