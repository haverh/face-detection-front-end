{"ast":null,"code":"/* Generated by `npm run build`, do not edit! */\n\n\"use strict\";\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\nvar acorn = require(\"acorn\");\nvar tt = acorn.tokTypes;\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue;\n    this._inStaticFieldValue = true;\n    field.value = this.parseExpression();\n    this._inStaticFieldValue = oldInFieldValue;\n  } else {\n    field.value = null;\n  }\n}\nvar privateClassElements = require(\"../private-class-elements\");\nmodule.exports = function (Parser) {\n  var ExtendedParser = privateClassElements(Parser);\n  return /*@__PURE__*/function (ExtendedParser) {\n    function anonymous() {\n      ExtendedParser.apply(this, arguments);\n    }\n    if (ExtendedParser) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create(ExtendedParser && ExtendedParser.prototype);\n    anonymous.prototype.constructor = anonymous;\n    anonymous.prototype.parseClassElement = function parseClassElement(_constructorAllowsSuper) {\n      var this$1 = this;\n      if (this.eat(tt.semi)) {\n        return null;\n      }\n      var node = this.startNode();\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") {\n          noLineBreak = false;\n        }\n        var start = this$1.start,\n          startLoc = this$1.startLoc;\n        if (!this$1.eatContextual(k)) {\n          return false;\n        }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) {\n          return true;\n        }\n        if (node.key) {\n          this$1.unexpected();\n        }\n        node.computed = false;\n        node.key = this$1.startNodeAt(start, startLoc);\n        node.key.name = k;\n        this$1.finishNode(node.key, \"Identifier\");\n        return false;\n      };\n      node.static = tryContextual(\"static\");\n      if (!node.static) {\n        return ExtendedParser.prototype.parseClassElement.apply(this, arguments);\n      }\n      var isGenerator = this.eat(tt.star);\n      var isAsync = false;\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos;\n          var skip = skipWhiteSpace.exec(this.input);\n          var next = this.input.charAt(this.pos + skip[0].length);\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true);\n            node.computed = false;\n            maybeParseFieldValue.call(this, node);\n            this.finishNode(node, \"FieldDefinition\");\n            this.semicolon();\n            return node;\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true;\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star);\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\";\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\";\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node);\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\");\n          }\n          maybeParseFieldValue.call(this, node);\n          this.finishNode(node, \"FieldDefinition\");\n          this.semicolon();\n          return node;\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node);\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\");\n        }\n      }\n      if (!node.kind) {\n        node.kind = \"method\";\n      }\n      this.parseClassMethod(node, isGenerator, isAsync);\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\");\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\");\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\");\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\");\n      }\n      return node;\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod(method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments);\n      }\n      maybeParseFieldValue.call(this, method);\n      delete method.kind;\n      method = this.finishNode(method, \"FieldDefinition\");\n      this.semicolon();\n      return method;\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent(liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding);\n      if (this._inStaticFieldValue && ident.name == \"arguments\") {\n        this.raise(ident.start, \"A static class field initializer may not contain arguments\");\n      }\n      return ident;\n    };\n    return anonymous;\n  }(ExtendedParser);\n};","map":{"version":3,"names":["skipWhiteSpace","acorn","require","tt","tokTypes","maybeParseFieldValue","field","eat","eq","oldInFieldValue","_inStaticFieldValue","value","parseExpression","privateClassElements","module","exports","Parser","ExtendedParser","anonymous","apply","arguments","__proto__","prototype","Object","create","constructor","parseClassElement","_constructorAllowsSuper","this$1","semi","node","startNode","tryContextual","k","noLineBreak","start","startLoc","eatContextual","type","parenL","canInsertSemicolon","key","unexpected","computed","startNodeAt","name","finishNode","static","isGenerator","star","isAsync","options","ecmaVersion","isContextual","lastIndex","pos","skip","exec","input","next","charAt","length","parseIdent","call","semicolon","kind","privateNameToken","parsePrivateClassElementName","raise","parsePropertyName","parseClassMethod","params","raiseRecoverable","method","_allowsDirectSuper","liberal","isBinding","ident"],"sources":["C:/Users/straw/Desktop/Personal CS Projects/ZTM/Web Developer Course/face-recognition/node_modules/acorn-node/lib/static-class-features/index.js"],"sourcesContent":["/* Generated by `npm run build`, do not edit! */\n\n\"use strict\"\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g\n\nvar acorn = require(\"acorn\")\nvar tt = acorn.tokTypes\n\nfunction maybeParseFieldValue(field) {\n  if (this.eat(tt.eq)) {\n    var oldInFieldValue = this._inStaticFieldValue\n    this._inStaticFieldValue = true\n    field.value = this.parseExpression()\n    this._inStaticFieldValue = oldInFieldValue\n  } else { field.value = null }\n}\n\nvar privateClassElements = require(\"../private-class-elements\")\n\nmodule.exports = function(Parser) {\n  var ExtendedParser = privateClassElements(Parser)\n\n  return /*@__PURE__*/(function (ExtendedParser) {\n    function anonymous () {\n      ExtendedParser.apply(this, arguments);\n    }\n\n    if ( ExtendedParser ) anonymous.__proto__ = ExtendedParser;\n    anonymous.prototype = Object.create( ExtendedParser && ExtendedParser.prototype );\n    anonymous.prototype.constructor = anonymous;\n\n    anonymous.prototype.parseClassElement = function parseClassElement (_constructorAllowsSuper) {\n      var this$1 = this;\n\n      if (this.eat(tt.semi)) { return null }\n\n      var node = this.startNode()\n\n      var tryContextual = function (k, noLineBreak) {\n        if (typeof noLineBreak == \"undefined\") { noLineBreak = false }\n        var start = this$1.start, startLoc = this$1.startLoc\n        if (!this$1.eatContextual(k)) { return false }\n        if (this$1.type !== tt.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n        if (node.key) { this$1.unexpected() }\n        node.computed = false\n        node.key = this$1.startNodeAt(start, startLoc)\n        node.key.name = k\n        this$1.finishNode(node.key, \"Identifier\")\n        return false\n      }\n\n      node.static = tryContextual(\"static\")\n      if (!node.static) { return ExtendedParser.prototype.parseClassElement.apply(this, arguments) }\n\n      var isGenerator = this.eat(tt.star)\n      var isAsync = false\n      if (!isGenerator) {\n        // Special-case for `async`, since `parseClassMember` currently looks\n        // for `(` to determine whether `async` is a method name\n        if (this.options.ecmaVersion >= 8 && this.isContextual(\"async\")) {\n          skipWhiteSpace.lastIndex = this.pos\n          var skip = skipWhiteSpace.exec(this.input)\n          var next = this.input.charAt(this.pos + skip[0].length)\n          if (next === \";\" || next === \"=\") {\n            node.key = this.parseIdent(true)\n            node.computed = false\n            maybeParseFieldValue.call(this, node)\n            this.finishNode(node, \"FieldDefinition\")\n            this.semicolon()\n            return node\n          } else if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n            isAsync = true\n            isGenerator = this.options.ecmaVersion >= 9 && this.eat(tt.star)\n          }\n        } else if (tryContextual(\"get\")) {\n          node.kind = \"get\"\n        } else if (tryContextual(\"set\")) {\n          node.kind = \"set\"\n        }\n      }\n      if (this.type === this.privateNameToken) {\n        this.parsePrivateClassElementName(node)\n        if (this.type !== tt.parenL) {\n          if (node.key.name === \"prototype\") {\n            this.raise(node.key.start, \"Classes may not have a private static property named prototype\")\n          }\n          maybeParseFieldValue.call(this, node)\n          this.finishNode(node, \"FieldDefinition\")\n          this.semicolon()\n          return node\n        }\n      } else if (!node.key) {\n        this.parsePropertyName(node)\n        if ((node.key.name || node.key.value) === \"prototype\" && !node.computed) {\n          this.raise(node.key.start, \"Classes may not have a static property named prototype\")\n        }\n      }\n      if (!node.kind) { node.kind = \"method\" }\n      this.parseClassMethod(node, isGenerator, isAsync)\n      if (!node.kind && (node.key.name || node.key.value) === \"constructor\" && !node.computed) {\n        this.raise(node.key.start, \"Classes may not have a static field named constructor\")\n      }\n      if (node.kind === \"get\" && node.value.params.length !== 0) {\n        this.raiseRecoverable(node.value.start, \"getter should have no params\")\n      }\n      if (node.kind === \"set\" && node.value.params.length !== 1) {\n        this.raiseRecoverable(node.value.start, \"setter should have exactly one param\")\n      }\n      if (node.kind === \"set\" && node.value.params[0].type === \"RestElement\") {\n        this.raiseRecoverable(node.value.params[0].start, \"Setter cannot use rest params\")\n      }\n\n      return node\n\n    };\n\n    // Parse public static fields\n    anonymous.prototype.parseClassMethod = function parseClassMethod (method, isGenerator, isAsync, _allowsDirectSuper) {\n      if (isGenerator || isAsync || method.kind != \"method\" || !method.static || this.options.ecmaVersion < 8 || this.type == tt.parenL) {\n        return ExtendedParser.prototype.parseClassMethod.apply(this, arguments)\n      }\n      maybeParseFieldValue.call(this, method)\n      delete method.kind\n      method = this.finishNode(method, \"FieldDefinition\")\n      this.semicolon()\n      return method\n    };\n\n    // Prohibit arguments in class field initializers\n    anonymous.prototype.parseIdent = function parseIdent (liberal, isBinding) {\n      var ident = ExtendedParser.prototype.parseIdent.call(this, liberal, isBinding)\n      if (this._inStaticFieldValue && ident.name == \"arguments\") { this.raise(ident.start, \"A static class field initializer may not contain arguments\") }\n      return ident\n    };\n\n    return anonymous;\n  }(ExtendedParser))\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}